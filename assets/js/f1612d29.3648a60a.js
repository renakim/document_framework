"use strict";(self.webpackChunkwi_znet_documentation=self.webpackChunkwi_znet_documentation||[]).push([[4805],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>N});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var p=a.createContext({}),m=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=m(t.components);return a.createElement(p.Provider,{value:e},t.children)},o={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,d=u(t,["components","mdxType","originalType","parentName"]),k=m(n),N=l,g=k["".concat(p,".").concat(N)]||k[N]||o[N]||r;return n?a.createElement(g,i(i({ref:e},d),{},{components:n})):a.createElement(g,i({ref:e},d))}));function N(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=k;var u={};for(var p in e)hasOwnProperty.call(e,p)&&(u[p]=e[p]);u.originalType=t,u.mdxType="string"==typeof t?t:l,i[1]=u;for(var m=2;m<r;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},11357:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>o,frontMatter:()=>r,metadata:()=>u,toc:()=>m});var a=n(87462),l=(n(67294),n(3905));const r={id:"lm75-temperature",title:"I2C and LM75 Temperature Sensor communication example",date:new Date("2020-06-10T00:00:00.000Z")},i=void 0,u={unversionedId:"Product/iMCU/W7500/Peripherals-internal/lm75-temperature",id:"Product/iMCU/W7500/Peripherals-internal/lm75-temperature",title:"I2C and LM75 Temperature Sensor communication example",description:"(C) COPYRIGHT 2015 WIZnet Co.,Ltd.",source:"@site/docs/Product/iMCU/W7500/Peripherals-internal/lm75-temperature.md",sourceDirName:"Product/iMCU/W7500/Peripherals-internal",slug:"/Product/iMCU/W7500/Peripherals-internal/lm75-temperature",permalink:"/Product/iMCU/W7500/Peripherals-internal/lm75-temperature",draft:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/lm75-temperature.md",tags:[],version:"current",frontMatter:{id:"lm75-temperature",title:"I2C and LM75 Temperature Sensor communication example",date:"2020-06-10T00:00:00.000Z"},sidebar:"docs",previous:{title:"EXTI LED Toggle example",permalink:"/Product/iMCU/W7500/Peripherals-internal/led-toggle"},next:{title:"SSP Loopback example",permalink:"/Product/iMCU/W7500/Peripherals-internal/loopback"}},p={},m=[{value:"Example Description",id:"example-description",level:3},{value:"Directory contents",id:"directory-contents",level:3},{value:"Hardware and Software environment",id:"hardware-and-software-environment",level:3},{value:"LM75 Pin Configuration",id:"lm75-pin-configuration",level:3},{value:"LM75 Pin Description",id:"lm75-pin-description",level:2},{value:"LM75 register",id:"lm75-register",level:3},{value:"LM75 Device Address",id:"lm75-device-address",level:3},{value:"LM75 Temp register table",id:"lm75-temp-register-table",level:3},{value:"How to use it ?",id:"how-to-use-it-",level:3},{value:"Flow Chart",id:"flow-chart",level:3}],d={toc:m};function o(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,"(C) COPYRIGHT 2015 WIZnet Co.,Ltd."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"file    : I2C/I2C_Temperture_LM75A/readme.md "),(0,l.kt)("li",{parentName:"ul"},"author  : IOP Team"),(0,l.kt)("li",{parentName:"ul"},"version : V1.0.0"),(0,l.kt)("li",{parentName:"ul"},"date    : 1-May-2015"),(0,l.kt)("li",{parentName:"ul"},"brief   :  Description of the I2C and LM75 Temperature Sensor communication example.")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, WIZNET SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"example-description"},"Example Description"),(0,l.kt)("p",null,"This example provides a description of how to use I2C to communicate with a\nLM75 I2C temperature sensor is mounted on the evaluation board and used to get\ninstantaneous external temperature."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"directory-contents"},"Directory contents"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"I2C/I2C_Temperture_LM75A/main.c                              \t\t\t\t(Main program)"),(0,l.kt)("li",{parentName:"ul"},"I2C/I2C_Temperture_LM75A/W7500x_it.c                       \t\t\t\t\t(Interrupt Handlers)"),(0,l.kt)("li",{parentName:"ul"},"I2C/I2C_Temperture_LM75A/W7500x_it.h                     \t\t\t\t  \t(Interrupt Handlers Header file)"),(0,l.kt)("li",{parentName:"ul"},"I2C/I2C_Temperture_LM75A/W7500x_conf.h                     \t\t\t\t\t(Library Configuration file)"),(0,l.kt)("li",{parentName:"ul"},"I2C/I2C_Temperture_LM75A/MDK//W7500x_I2C_Temperture_LM75A.uvproj         \t(Project file)"),(0,l.kt)("li",{parentName:"ul"},"I2C/I2C_Temperture_LM75A/GCC/Makefile                      \t\t\t\t\t(GCC Make file)")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"hardware-and-software-environment"},"Hardware and Software environment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"  --W7500--        --LM75--\n |         |      |        |\n |     SDA |------| SDA    |\n |     SCL |------| SCL    |\n |         |      |        |\n |         |      |        |\n  ---------       ---------\n")),(0,l.kt)("h3",{id:"lm75-pin-configuration"},"LM75 Pin Configuration"),(0,l.kt)("blockquote",null),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"     -----      \n  SDA |1   8| VCC\n  SCL |2   7| A0 \n  OS  |3   6| A1 \n  GND |4   5| A2 \n     -----\n")),(0,l.kt)("h2",{id:"lm75-pin-description"},"LM75 Pin Description"),(0,l.kt)("hr",null),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"PIN"),(0,l.kt)("th",{parentName:"tr",align:null},"SYMBOL"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"SDA"),(0,l.kt)("td",{parentName:"tr",align:null},"Digital I/O. I2C serial bi-directional data line. Open Drain")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"SCL"),(0,l.kt)("td",{parentName:"tr",align:null},"Digital input. I2C serial clock input.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"OS"),(0,l.kt)("td",{parentName:"tr",align:null},"Overtemp Shutdown output. Open Drain.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"Ground. To be connected to the system ground.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"A2"),(0,l.kt)("td",{parentName:"tr",align:null},"Digital input. User-defined address bit2.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"A1"),(0,l.kt)("td",{parentName:"tr",align:null},"Digital input. User-defined address bit1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"A0"),(0,l.kt)("td",{parentName:"tr",align:null},"Digital input. User-defined address bit0.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC"),(0,l.kt)("td",{parentName:"tr",align:null},"Power supply.")))),(0,l.kt)("h3",{id:"lm75-register"},"LM75 register"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"REG NAME"),(0,l.kt)("th",{parentName:"tr",align:null},"Addr"),(0,l.kt)("th",{parentName:"tr",align:null},"R/W"),(0,l.kt)("th",{parentName:"tr",align:null},"RST Value"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Temp"),(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},"R/W"),(0,l.kt)("td",{parentName:"tr",align:null},"0x0000"),(0,l.kt)("td",{parentName:"tr",align:null},"Configuration Register.",(0,l.kt)("br",null),"Contains a single 8-bit data byte.",(0,l.kt)("br",null),"To set the device operating condition",(0,l.kt)("br",null),"Default = 0.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Conf"),(0,l.kt)("td",{parentName:"tr",align:null},"0x01"),(0,l.kt)("td",{parentName:"tr",align:null},"R"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A"),(0,l.kt)("td",{parentName:"tr",align:null},"Temperature Register.",(0,l.kt)("br",null),"Contains two 8-bit data bytes.",(0,l.kt)("br",null),"To store the measured Temp data.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Thyrs"),(0,l.kt)("td",{parentName:"tr",align:null},"0x02"),(0,l.kt)("td",{parentName:"tr",align:null},"R/W"),(0,l.kt)("td",{parentName:"tr",align:null},"0x5000"),(0,l.kt)("td",{parentName:"tr",align:null},"Over-temp Shutdown threshold Register.",(0,l.kt)("br",null),"Contains two 8-bit data bytes.",(0,l.kt)("br",null),"To store the over-temp shut-down Tos limit.",(0,l.kt)("br",null)," Default = 80c")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Tos"),(0,l.kt)("td",{parentName:"tr",align:null},"0x03"),(0,l.kt)("td",{parentName:"tr",align:null},"R/W"),(0,l.kt)("td",{parentName:"tr",align:null},"0x4B00"),(0,l.kt)("td",{parentName:"tr",align:null},"Hysteresis Register.",(0,l.kt)("br",null),"Contains two 8-bit data bytes.",(0,l.kt)("br",null),"To store the hysteresis Thyst limit.",(0,l.kt)("br",null),"                    Default = 75C.")))),(0,l.kt)("h3",{id:"lm75-device-address"},"LM75 Device Address"),(0,l.kt)("blockquote",null),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"       --- --- --- --- --- --- --- \n      | 1 | 0 | 0 | 1 |A2 | A1| A0|\n       --- --- --- --- --- --- --- \n                                LSB\n                                \n")),(0,l.kt)("h3",{id:"lm75-temp-register-table"},"LM75 Temp register table"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Temp MS byte"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Temp LS byte"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MSB"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"LSB"),(0,l.kt)("td",{parentName:"tr",align:null},"MSB"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"LSB")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"B7"),(0,l.kt)("td",{parentName:"tr",align:null},"B6"),(0,l.kt)("td",{parentName:"tr",align:null},"B5"),(0,l.kt)("td",{parentName:"tr",align:null},"B4"),(0,l.kt)("td",{parentName:"tr",align:null},"B3"),(0,l.kt)("td",{parentName:"tr",align:null},"B2"),(0,l.kt)("td",{parentName:"tr",align:null},"B1"),(0,l.kt)("td",{parentName:"tr",align:null},"B0"),(0,l.kt)("td",{parentName:"tr",align:null},"B7"),(0,l.kt)("td",{parentName:"tr",align:null},"B6"),(0,l.kt)("td",{parentName:"tr",align:null},"B5"),(0,l.kt)("td",{parentName:"tr",align:null},"B4"),(0,l.kt)("td",{parentName:"tr",align:null},"B3"),(0,l.kt)("td",{parentName:"tr",align:null},"B2"),(0,l.kt)("td",{parentName:"tr",align:null},"B1"),(0,l.kt)("td",{parentName:"tr",align:null},"B0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Temp data(11bits)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Not Used"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MSB"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"LSB"),(0,l.kt)("td",{parentName:"tr",align:null},"MSB"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"LSB")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D10"),(0,l.kt)("td",{parentName:"tr",align:null},"D9"),(0,l.kt)("td",{parentName:"tr",align:null},"D8"),(0,l.kt)("td",{parentName:"tr",align:null},"D7"),(0,l.kt)("td",{parentName:"tr",align:null},"D6"),(0,l.kt)("td",{parentName:"tr",align:null},"D5"),(0,l.kt)("td",{parentName:"tr",align:null},"D4"),(0,l.kt)("td",{parentName:"tr",align:null},"D3"),(0,l.kt)("td",{parentName:"tr",align:null},"D2"),(0,l.kt)("td",{parentName:"tr",align:null},"D1"),(0,l.kt)("td",{parentName:"tr",align:null},"D0"),(0,l.kt)("td",{parentName:"tr",align:null},"X"),(0,l.kt)("td",{parentName:"tr",align:null},"X"),(0,l.kt)("td",{parentName:"tr",align:null},"X"),(0,l.kt)("td",{parentName:"tr",align:null},"X"),(0,l.kt)("td",{parentName:"tr",align:null},"X")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"how-to-use-it-"},"How to use it ?"),(0,l.kt)("p",null,"In order to make the program work, you must do the following :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Open your preferred toolchain."),(0,l.kt)("li",{parentName:"ul"},"Rebuild all files and load your image into target memory."),(0,l.kt)("li",{parentName:"ul"},"Run the example."),(0,l.kt)("li",{parentName:"ul"},"WIZwiki W7500 where the Flash memory density ranges 128Kbytes."),(0,l.kt)("li",{parentName:"ul"},"If you have any questions, please use the forum site.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'"',(0,l.kt)("a",{parentName:"li",href:"https://forum.wiznet.io/%22"},'https://forum.wiznet.io/"'))))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"flow-chart"},"Flow Chart"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Master Init"),(0,l.kt)("li",{parentName:"ul"},"Slave address send from W7500 to LM75"),(0,l.kt)("li",{parentName:"ul"},"START enable"),(0,l.kt)("li",{parentName:"ul"},"Confirm the Ack Receive"),(0,l.kt)("li",{parentName:"ul"},"Send the data from W7500 to LM75"),(0,l.kt)("li",{parentName:"ul"},"Restart enable"),(0,l.kt)("li",{parentName:"ul"},"Confirm the Ack Receive"),(0,l.kt)("li",{parentName:"ul"},"Receive the data"),(0,l.kt)("li",{parentName:"ul"},"Transmit the Ack transmission"),(0,l.kt)("li",{parentName:"ul"},"STOP enable")),(0,l.kt)("p",null,"\xa9"," COPYRIGHT 2015 WIZnet Co.,Ltd."))}o.isMDXComponent=!0}}]);