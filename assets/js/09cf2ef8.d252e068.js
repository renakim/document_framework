"use strict";(self.webpackChunkwi_znet_documentation=self.webpackChunkwi_znet_documentation||[]).push([[2780],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(r),m=l,f=s["".concat(u,".").concat(m)]||s[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=s;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},9864:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(87462),l=(r(67294),r(3905));const a={id:"printf",title:"UART Polling example",date:new Date("2020-04-03T00:00:00.000Z")},i=void 0,o={unversionedId:"Product/iMCU/W7500/Peripherals-internal/printf",id:"Product/iMCU/W7500/Peripherals-internal/printf",title:"UART Polling example",description:"(C) COPYRIGHT 2015 WIZnet Co.,Ltd.",source:"@site/docs/Product/iMCU/W7500/Peripherals-internal/printf.md",sourceDirName:"Product/iMCU/W7500/Peripherals-internal",slug:"/Product/iMCU/W7500/Peripherals-internal/printf",permalink:"/Product/iMCU/W7500/Peripherals-internal/printf",draft:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/printf.md",tags:[],version:"current",frontMatter:{id:"printf",title:"UART Polling example",date:"2020-04-03T00:00:00.000Z"},sidebar:"docs",previous:{title:"UART Printf example",permalink:"/Product/iMCU/W7500/Peripherals-internal/polling"},next:{title:"Pulse Width Modulation (PWM)",permalink:"/Product/iMCU/W7500/Peripherals-internal/pwm"}},u={},p=[{value:"Example Description",id:"example-description",level:3},{value:"Directory contents",id:"directory-contents",level:3},{value:"Hardware and Software environment",id:"hardware-and-software-environment",level:3},{value:"How to use it ?",id:"how-to-use-it-",level:3}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,"(C) COPYRIGHT 2015 WIZnet Co.,Ltd."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"file    : UART/Polling/readme.md "),(0,l.kt)("li",{parentName:"ul"},"author  : IOP Team"),(0,l.kt)("li",{parentName:"ul"},"version : V1.0.0"),(0,l.kt)("li",{parentName:"ul"},"date    : 1-May-2015"),(0,l.kt)("li",{parentName:"ul"},"brief   : Description of the UART_Polling example.")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, WIZNET SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"example-description"},"Example Description"),(0,l.kt)("p",null,"This example provides a basic communication between UART0 and UART1 using flags."),(0,l.kt)("p",null,'First, the UART0 sends TxBuffer to UART1. The UART1 reads the received data and\nstore it into RxBuffer.\nThe received data is then compared with the send ones and the result of this\ncomparison is stored in the "TransferStatus" variable.'),(0,l.kt)("p",null,"The UART0/UART1 is configured as follow:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"BaudRate = 115200 baud  "),(0,l.kt)("li",{parentName:"ul"},"Word Length = 8 Bits"),(0,l.kt)("li",{parentName:"ul"},"One Stop Bit"),(0,l.kt)("li",{parentName:"ul"},"No parity"),(0,l.kt)("li",{parentName:"ul"},"Hardware flow control disable"),(0,l.kt)("li",{parentName:"ul"},"Receive and transmit enable")),(0,l.kt)("p",null,"This example describes that the data send from UART0 to UART1."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"directory-contents"},"Directory contents"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"UART/Polling/main.c                                            (Main program)"),(0,l.kt)("li",{parentName:"ul"},"UART/Polling/W7500x_conf.h                                     (Library Configuration file)"),(0,l.kt)("li",{parentName:"ul"},"UART/Polling/W7500x_it.h                                       (Interrupt handlers header file)"),(0,l.kt)("li",{parentName:"ul"},"UART/Polling/W7500x_it.c                                       (Interrupt handlers)"),(0,l.kt)("li",{parentName:"ul"},"UART/Polling/MDK/W7500x_Uart_Polling.uvproj                    (Project file)"),(0,l.kt)("li",{parentName:"ul"},"UART/Polling/GCC/Makefile                        \t\t   \t  (GCC Make file)")),(0,l.kt)("h3",{id:"hardware-and-software-environment"},"Hardware and Software environment"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"This example runs on W7500 Connectivity line Devices."),(0,l.kt)("li",{parentName:"ul"},"W7500 Set-up")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"   --------------            --------------\n  |    UART0     |          |     UART1    |\n  |              |          |              |\n  |   (PA_13)TXD |----------|   RXD(PB_03) |\n  |   (PA_14)RXD |----------|   TXD(PB_03) |\n  |              |          |              |\n  |              |          |              |\n   --------------            --------------\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"TXD(PA13) and  RXD(PB_03) connected."),(0,l.kt)("li",{parentName:"ul"},"RXD(PA14) and  TXD(PB_02) connected.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"how-to-use-it-"},"How to use it ?"),(0,l.kt)("p",null,"In order to make the program work, you must do the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Copy all source files from this example folder to the template folder under\nProject\\Peripheral_Example"),(0,l.kt)("li",{parentName:"ul"},"Open your preferred toolchain "),(0,l.kt)("li",{parentName:"ul"},"Rebuild all files and load your image into target memory"),(0,l.kt)("li",{parentName:"ul"},"Run the example ")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"\xa9"," COPYRIGHT 2015 WIZnet Co.,Ltd."))}d.isMDXComponent=!0}}]);