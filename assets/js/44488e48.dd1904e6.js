"use strict";(self.webpackChunkwi_znet_documentation=self.webpackChunkwi_znet_documentation||[]).push([[2726],{3905:(t,e,a)=>{a.d(e,{Zo:()=>o,kt:()=>d});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var m=n.createContext({}),k=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):p(p({},e),t)),a},o=function(t){var e=k(t.components);return n.createElement(m.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},N=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,m=t.parentName,o=i(t,["components","mdxType","originalType","parentName"]),N=k(a),d=l,s=N["".concat(m,".").concat(d)]||N[d]||u[d]||r;return a?n.createElement(s,p(p({ref:e},o),{},{components:a})):n.createElement(s,p({ref:e},o))}));function d(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,p=new Array(r);p[0]=N;var i={};for(var m in e)hasOwnProperty.call(e,m)&&(i[m]=e[m]);i.originalType=t,i.mdxType="string"==typeof t?t:l,p[1]=i;for(var k=2;k<r;k++)p[k]=a[k];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},63107:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>p,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>k});var n=a(87462),l=(a(67294),a(3905));const r={id:"at_commands",title:"AT Commands",date:new Date("2020-04-15T00:00:00.000Z")},p=void 0,i={unversionedId:"Product/Wi-Fi-Module/WizFi310/Programers-Guide/at_commands",id:"Product/Wi-Fi-Module/WizFi310/Programers-Guide/at_commands",title:"AT Commands",description:"This section provides a list of WizFi310 AT commands and their effects.",source:"@site/docs/Product/Wi-Fi-Module/WizFi310/Programers-Guide/AT_Commands.md",sourceDirName:"Product/Wi-Fi-Module/WizFi310/Programers-Guide",slug:"/Product/Wi-Fi-Module/WizFi310/Programers-Guide/at_commands",permalink:"/Product/Wi-Fi-Module/WizFi310/Programers-Guide/at_commands",draft:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/Wi-Fi-Module/WizFi310/Programers-Guide/AT_Commands.md",tags:[],version:"current",frontMatter:{id:"at_commands",title:"AT Commands",date:"2020-04-15T00:00:00.000Z"},sidebar:"docs",previous:{title:"Overview",permalink:"/Product/Wi-Fi-Module/WizFi310/Programers-Guide/overview"},next:{title:"Firmware Upgrade(Using Serial Interface)",permalink:"/Product/Wi-Fi-Module/WizFi310/Programers-Guide/firmware_upgrade_using_serial_interface"}},m={},k=[{value:"Responses",id:"responses",level:2},{value:"Command List",id:"command-list",level:2},{value:"Basic Commands",id:"basic-commands",level:2},{value:"AT",id:"at",level:4},{value:"WiFi Commands",id:"wifi-commands",level:2},{value:"Commands related to WiFi are listed below.",id:"commands-related-to-wifi-are-listed-below",level:2},{value:"AT+WJOIN",id:"atwjoin",level:4},{value:"AT+WLEAVE",id:"atwleave",level:4},{value:"AT+WSCAN",id:"atwscan",level:4},{value:"AT+WSET",id:"atwset",level:4},{value:"AT+WSET2",id:"atwset2",level:4},{value:"AT+WSEC",id:"atwsec",level:4},{value:"AT+WNET",id:"atwnet",level:4},{value:"AT+WSTAT",id:"atwstat",level:4},{value:"AT+WWPS",id:"atwwps",level:4},{value:"AT+WADNS",id:"atwadns",level:4},{value:"Network Commands",id:"network-commands",level:2},{value:"AT+SCON",id:"atscon",level:4},{value:"AT+SMGMT",id:"atsmgmt",level:4},{value:"AT+SSEND",id:"atssend",level:4},{value:"AT+SDATA",id:"atsdata",level:4},{value:"AT+SFORM",id:"atsform",level:4},{value:"AT+SOPT",id:"atsopt",level:4},{value:"AT+SOPT1",id:"atsopt1",level:4},{value:"Management Commands",id:"management-commands",level:2},{value:"AT+MPROF",id:"atmprof",level:4},{value:"AT+MFDEF",id:"atmfdef",level:4},{value:"AT+MRESET",id:"atmreset",level:4},{value:"AT+MMSG",id:"atmmsg",level:4},{value:"AT+MMAC",id:"atmmac",level:4},{value:"AT+MINFO",id:"atminfo",level:4},{value:"AT+MECHO",id:"atmecho",level:4},{value:"AT+MHELP",id:"atmhelp",level:4},{value:"AT+MMCUPS",id:"atmmcups",level:4},{value:"AT+MWIFIPS",id:"atmwifips",level:4},{value:"AT+USET",id:"atuset",level:4},{value:"AT+MCUSTOM",id:"atmcustom",level:4},{value:"AT+MAIRCMD",id:"atmaircmd",level:4},{value:"AT+MEVTMSG",id:"atmevtmsg",level:4},{value:"AT+MEVTFORM",id:"atmevtform",level:4},{value:"AT+MUPGRADE",id:"atmupgrade",level:4},{value:"Function Commands",id:"function-commands",level:2},{value:"AT+FPING",id:"atfping",level:4},{value:"AT+FDNS",id:"atfdns",level:4},{value:"AT+FGPIO",id:"atfgpio",level:4},{value:"AT+FGETADC",id:"atfgetadc",level:4},{value:"AT+FSOCK",id:"atfsock",level:4},{value:"AT+FOTA",id:"atfota",level:4},{value:"MQTT Commands",id:"mqtt-commands",level:2},{value:"AT+MQTTSET",id:"atmqttset",level:4},{value:"AT+MQTTCON",id:"atmqttcon",level:4},{value:"AT+MQTTSUB",id:"atmqttsub",level:4},{value:"AT+MQTTPUB",id:"atmqttpub",level:4},{value:"GMMP Commands",id:"gmmp-commands",level:2},{value:"AT+GMMPSET",id:"atgmmpset",level:4},{value:"AT+GMMPDATA",id:"atgmmpdata",level:4},{value:"AT+GMMPOPT",id:"atgmmpopt",level:4},{value:"&lt;Option&gt; = 10",id:"option--10",level:4},{value:"Connecting ThingPlug Commands",id:"connecting-thingplug-commands",level:2},{value:"AT+SKTPCON",id:"atsktpcon",level:4},{value:"AT+SKTPDEVICE",id:"atsktpdevice",level:4},{value:"AT+SKTPCONTAINER",id:"atsktpcontainer",level:4},{value:"AT+SKTPSEND",id:"atsktpsend",level:4},{value:"AT+SKTPCMD",id:"atsktpcmd",level:4},{value:"AT+SKTPRESULT",id:"atsktpresult",level:4},{value:"Command mode &amp; Data mode",id:"command-mode--data-mode",level:2},{value:"Entering Data mode",id:"entering-data-mode",level:3},{value:"Data transmission in Command mode",id:"data-transmission-in-command-mode",level:3}],o={toc:k};function u(t){let{components:e,...a}=t;return(0,l.kt)("wrapper",(0,n.Z)({},o,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This section provides a list of WizFi310 AT commands and their effects.\nUsers can input commands and parameters through UART line. Every command\nstarts with the characters \u201cAT\u201d. Any other initial character will cause\nan error in return. Commands and parameters are all ASCII characters,\ne.g. When you input 'AT+MMSG=1', you can input ASCII characters 'A',\n'T', '+', 'M', 'M', 'S', 'G', '=', '1' and 'Enter Key' which should be\nCR(0x0d), but neither CRLF(0x0d, 0x0a) nor LF(0x0a).  "),(0,l.kt)("p",null,"Some parameters are mandatory and the others are optional. (refer to\nCommand Tables) Parameters must be entered in an order of format column\ngiven by the command tables. Even though an optional parameter is not\nused, the comma delimiters must still be included in the command. In\nmost cases, valid commands return the characters ","[OK]",". Invalid inputs\nreturn ","[ERROR]",". The possible responses sent by WizFi310 to the user\nside are described at Responses. Below is a possible example which users\ncan input. As you can see, WizFi310 return \u201crn\u201d back instead of\n\u201cr\u201d, which means user (host system) always handle 'rn' as a\nonly delimiter.  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Input by User"),(0,l.kt)("th",{parentName:"tr",align:null},"ATr (0x61 0x74 0x0d)"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Output from WizFi310"),(0,l.kt)("td",{parentName:"tr",align:null},"ATrn","[OK]","rn (0x61 0x74 0x0d 0x0a 0x5b 0x4f 0x4b 0x5d 0x0d 0x0a) (- \u201cATrn\u201d is Echo back of user input)")))),(0,l.kt)("h2",{id:"responses"},"Responses"),(0,l.kt)("p",null,"Responses are listed below."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Response"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[OK]"),(0,l.kt)("td",{parentName:"tr",align:null},"Command Request Success")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[ERROR]"),(0,l.kt)("td",{parentName:"tr",align:null},"Command Request Fail")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[ERROR: INVALID INPUT]"),(0,l.kt)("td",{parentName:"tr",align:null},"Wrong command or parameter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[ERROR: INVALID SCID]"),(0,l.kt)("td",{parentName:"tr",align:null},"Wrong Socket ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[ERROR: WiFi Status]"),(0,l.kt)("td",{parentName:"tr",align:null},"Wrong WiFi Status (Some commands work only with Wi-Fi Joined status)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[ERROR: Mode Status]"),(0,l.kt)("td",{parentName:"tr",align:null},"Wrong Mode Status (Some commands do not work in Data mode)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[CONNECT x]"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP Connection established & Socket Open")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[DISCONNECT x]"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP Connection closed & Socket Close")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[Link-Up Event]"),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi Connection was established")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[Link-Down Event]"),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi Connection was closed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[Reset Event]"),(0,l.kt)("td",{parentName:"tr",align:null},"System reset occurred (not by user)")))),(0,l.kt)("h2",{id:"command-list"},"Command List"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Basic Commands"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#at"},"AT")),(0,l.kt)("td",{parentName:"tr",align:null},"Terminal Check")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"WiFi Commands")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwjoin"},"AT+WJOIN")),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi Association")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwleave"},"AT+WLEAVE")),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi Disassociation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwscan"},"AT+WSCAN")),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi Scan")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwset"},"AT+WSET")),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi SSID Configuration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwset2"},"AT+WSET2")),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi SSID Configuration for special Chars")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwsec"},"AT+WSEC")),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi Security Configuration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwnet"},"AT+WNET")),(0,l.kt)("td",{parentName:"tr",align:null},"Network Configuration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwstat"},"AT+WSTAT")),(0,l.kt)("td",{parentName:"tr",align:null},"Get Current WiFi Status")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwwps"},"AT+WWPS")),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi WPS Connection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atwadns"},"AT+WADNS")),(0,l.kt)("td",{parentName:"tr",align:null},"Add DNS Server")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Network Commands"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atscon"},"AT+SCON")),(0,l.kt)("td",{parentName:"tr",align:null},"Socket Open/Connect")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsmgmt"},"AT+SMGMT")),(0,l.kt)("td",{parentName:"tr",align:null},"Socket Management")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atssend"},"AT+SSEND")),(0,l.kt)("td",{parentName:"tr",align:null},"Data Send")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsdata"},"AT+SDATA")),(0,l.kt)("td",{parentName:"tr",align:null},"Return to Data Mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsform"},"AT+SFORM")),(0,l.kt)("td",{parentName:"tr",align:null},"Define Data Receive Header Form")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsopt"},"AT+SOPT")),(0,l.kt)("td",{parentName:"tr",align:null},"S2W Socket Option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsopt1"},"AT+SOPT1")),(0,l.kt)("td",{parentName:"tr",align:null},"S2W miscellaneous option")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Management Commands"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmprof"},"AT+MPROF")),(0,l.kt)("td",{parentName:"tr",align:null},"Profile Management")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmfdef"},"AT+MFDEF")),(0,l.kt)("td",{parentName:"tr",align:null},"Perform Factory Reset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmreset"},"AT+MRESET")),(0,l.kt)("td",{parentName:"tr",align:null},"Perform System Reset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmmsg"},"AT+MMSG")),(0,l.kt)("td",{parentName:"tr",align:null},"Set Message Print Level")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmmac"},"AT+MMAC")),(0,l.kt)("td",{parentName:"tr",align:null},"Set MAC Address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atminfo"},"AT+MINFO")),(0,l.kt)("td",{parentName:"tr",align:null},"Get System Information")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmecho"},"AT+MECHO")),(0,l.kt)("td",{parentName:"tr",align:null},"Set Echo Mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmhelp"},"AT+MHELP")),(0,l.kt)("td",{parentName:"tr",align:null},"Print Command Description and Usage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmmcups"},"AT+MMCUPS")),(0,l.kt)("td",{parentName:"tr",align:null},"MCU Power Save Enable/Disable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmwifips"},"AT+MWIFIPS")),(0,l.kt)("td",{parentName:"tr",align:null},"Wi-Fi Power Save Enable/Disable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atuset"},"AT+USET")),(0,l.kt)("td",{parentName:"tr",align:null},"UART Configuration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmcustom"},"AT+MCUSTOM")),(0,l.kt)("td",{parentName:"tr",align:null},"Custom code")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmaircmd"},"AT+MAIRCMD")),(0,l.kt)("td",{parentName:"tr",align:null},"Air Command Configuration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmevtmsg"},"AT+MEVTMSG")),(0,l.kt)("td",{parentName:"tr",align:null},"Print ","[Listen x]"," as soon as it opens up a socket through TCP server.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmevtform"},"AT+MEVTFORM")),(0,l.kt)("td",{parentName:"tr",align:null},"Event Message Form")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmupgrade"},"AT+MUPGRADE")),(0,l.kt)("td",{parentName:"tr",align:null},"Firmware upgrade using serial")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Function Commands"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atfping"},"AT+FPING")),(0,l.kt)("td",{parentName:"tr",align:null},"PING Test")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atfdns"},"AT+FDNS")),(0,l.kt)("td",{parentName:"tr",align:null},"DNS Query")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atfgpio"},"AT+FGPIO")),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO Control")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atfgetadc"},"AT+FGETADC")),(0,l.kt)("td",{parentName:"tr",align:null},"Read ADC value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atfsock"},"AT+FSOCK")),(0,l.kt)("td",{parentName:"tr",align:null},"SOCKET Extension Option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atfota"},"AT+FOTA")),(0,l.kt)("td",{parentName:"tr",align:null},"Launch OTA Mode")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Available Protocol")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"MQTT Commands"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmqttset"},"AT+MQTTSET")),(0,l.kt)("td",{parentName:"tr",align:null},"MQTT Configuration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmqttcon"},"AT+MQTTCON")),(0,l.kt)("td",{parentName:"tr",align:null},"MQTT Connect/Disconnect")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmqttsub"},"AT+MQTTSUB")),(0,l.kt)("td",{parentName:"tr",align:null},"MQTT Subscribe")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atmqttpub"},"AT+MQTTPUB")),(0,l.kt)("td",{parentName:"tr",align:null},"MQTT Publish")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"GMMP Commands"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atgmmpset"},"AT+GMMPSET")),(0,l.kt)("td",{parentName:"tr",align:null},"GMMP Configuration, Connect/Disconnect")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atgmmpdata"},"AT+GMMPDATA")),(0,l.kt)("td",{parentName:"tr",align:null},"GMMP Data Send")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atgmmpopt"},"AT+GMMPOPT")),(0,l.kt)("td",{parentName:"tr",align:null},"GMMP Option Management")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Connecting ThingPlug Commands"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsktpcon"},"AT+SKTPCON")),(0,l.kt)("td",{parentName:"tr",align:null},"Connecting authorization, Connect/Disconnect")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsktpdevice"},"AT+SKTPDEVICE")),(0,l.kt)("td",{parentName:"tr",align:null},"Device registration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsktpcontainer"},"AT+SKTPCONTAINER")),(0,l.kt)("td",{parentName:"tr",align:null},"Container Create")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsktpsend"},"AT+SKTPSEND")),(0,l.kt)("td",{parentName:"tr",align:null},"Data sending to ThingPlug")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsktpcmd"},"AT+SKTPCMD")),(0,l.kt)("td",{parentName:"tr",align:null},"Command registration to ThingPlug")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#atsktpresult"},"AT+SKTPRESULT")),(0,l.kt)("td",{parentName:"tr",align:null},"Response to ThingPlug Command")))),(0,l.kt)("h2",{id:"basic-commands"},"Basic Commands"),(0,l.kt)("p",null,"Basic commands are listed below."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"at"},"AT"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Format:\nAT\n"),(0,l.kt)("li",{parentName:"ul"},"Meaning: Terminal Check")),(0,l.kt)("p",null,"Check if AT Command Terminal is working."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Response:\n","[OK]")),(0,l.kt)("h2",{id:"wifi-commands"},"WiFi Commands"),(0,l.kt)("h2",{id:"commands-related-to-wifi-are-listed-below"},"Commands related to WiFi are listed below."),(0,l.kt)("h4",{id:"atwjoin"},"AT+WJOIN"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Format: "),(0,l.kt)("p",{parentName:"li"},"  AT+WJOIN\n")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Meaning: WiFi Association"),(0,l.kt)("p",{parentName:"li"},"  In the STA mode, it joins with the BSS selected by AT+WSET(or AT+WSET2), AT+WSEC.\nAnd in the AP mode, it starts to run as an Access Point."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"There are 2 Wi-Fi modes in WizFi310, STA mode and SoftAP mode. When users\nexecute AT+WJOIN command, the current Wi-Fi mode works as the one previously\nselected by user input. It can be selected or checked by AT+WSET(or AT+WSET2) and       AT+WSEC commands, and it is the only way to handle Wi-Fi mode.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"SoftAP mode does not support WEP security method.")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Response:"),(0,l.kt)("p",{parentName:"li"},"  ","[Link-Up Event]","\nIP Addr    : xxx.xxx.xxx.xxx\nGateway   : xxx.xxx.xxx.xxx\n","[OK]"),(0,l.kt)("p",{parentName:"li"},"  Already Associated : (Mode)\n","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwleave"},"AT+WLEAVE"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Format:\nAT+WLEAVE\n"),(0,l.kt)("li",{parentName:"ul"},"Meaning: WiFi Disassociation")),(0,l.kt)("p",null,"In the STA mode, it leaves current Access Point, but in the SoftAP mode, it stops to run as Access Point."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Response:\n","[Link-Down Event][OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwscan"},"AT+WSCAN"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Format:"),(0,l.kt)("p",{parentName:"li"},"  AT+WSCAN=","<","SSID",">",",","<","BSSID",">",",","<","Channel",">","\n")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Meaning: WiFi Scan"))),(0,l.kt)("p",null,"Return the scan results filtered by parameters."),(0,l.kt)("p",null,"<","SSID",">",": SSID Filter (Optional)\nScan only the AP which has this SSID.\n","<","BSSID",">",": BSSID Filter (Optional)\nScan only the AP which has this BSSID.\n","<","Channel",">",": Channel Filter (Optional)\nScan only the AP in this Channel."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"When combining these filters, it works at the same time. For example, if you enter AT+WSCAN=TestAP,00:08:DC:11:22:33', it only scans the AP which has TestAP as SSID and 00:08:DC:11:22:33 as BSSID in all the channel.")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+WSCAN=TestAP"),(0,l.kt)("li",{parentName:"ul"},"AT+WSCAN=,,6"),(0,l.kt)("li",{parentName:"ul"},"AT+WSCAN=,08:00:DC:11:22:33,11")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"\nIndex/SSID/BSSID/RSSI(-dBm)/MaxDataRate(Mbps)/Security/RadioBand(GHz)/Channel\n...\n","[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwset"},"AT+WSET"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"  AT+WSET=","<","WiFiMode",">",",","<","SSID",">",",","<","BSSID",">",",","<","Channel",">","\n"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," WiFi Configuration")),(0,l.kt)("p",null,"<","WiFiMode",">",": WiFi Mode to set (Required)\nThis changes current WiFi mode."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Set Wi-Fi mode as STA mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Set Wi-Fi mode as AP mode")))),(0,l.kt)("p",null,"<","SSID",">",": Target/Own SSID (Required, Max: 32 Character)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Mode"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STA"),(0,l.kt)("td",{parentName:"tr",align:null},"The SSID of target AP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AP"),(0,l.kt)("td",{parentName:"tr",align:null},"Its own SSID")))),(0,l.kt)("p",null,"<","BSSID",">",": Target BSSID (Optional, Form: xx:xx:xx:xx:xx:xx)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Mode"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STA"),(0,l.kt)("td",{parentName:"tr",align:null},"The BSSID of target AP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AP"),(0,l.kt)("td",{parentName:"tr",align:null},"Not used. if any, it will be ignored")))),(0,l.kt)("p",null,"<","Channel",">",": Target/Own Channel (Optional)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Mode"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STA"),(0,l.kt)("td",{parentName:"tr",align:null},"In STA mode, the Channel of target AP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AP"),(0,l.kt)("td",{parentName:"tr",align:null},"In AP mode, its own Channel to run (Default: 6)")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"There are 2 Wi-Fi modes in WizFi310, STA mode and SoftAP mode. When users execute AT+WJOIN command, it works as Wi-Fi mode previously selected by the user. It can be selected or checked by AT+WSET(or AT+WSET2) and AT+WSEC commands, and it is the only way to handle Wi-Fi mode.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+WSET(or AT+WSET2), AT+WSEC commands save its parameters into the profile automatically, so the user does not need to save the current profile."))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+WSET=0,WizFiAP"),(0,l.kt)("li",{parentName:"ul"},"AT+WSET=0,WizFiAP,08:00:DC:11:22:33,1")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+WSET=?\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning"),": Get Current WiFi configuration Settings")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:"),"\n",">"),(0,l.kt)("p",{parentName:"li"},"   ","<","WiFiMode",">",",","<","SSID",">",",","<","BSSID",">",",","<","Channel",">","\n","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwset2"},"AT+WSET2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"}," AT+WSET2=","<","WiFiMode",">",",","<","SSID",">")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," WiFi Configuration for SSID of special Characters like '\u201c' ',' '\u5171'"))),(0,l.kt)("p",null,"<","WiFiMode",">",": WiFi Mode to set (Required)\nThis changes current WiFi mode."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Set Wi-Fi mode as STA mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Set Wi-Fi mode as AP mode")))),(0,l.kt)("p",null,"<","SSID",">",": Target/Own SSID (Required, Max: 32 Character)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Mode"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STA"),(0,l.kt)("td",{parentName:"tr",align:null},"The SSID of target AP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AP"),(0,l.kt)("td",{parentName:"tr",align:null},"Its own SSID to run")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"There are 2 Wi-Fi modes in WizFi310, STA mode and SoftAP mode. When users execute AT+WJOIN command, it works as Wi-Fi mode previously selected by the user. It can be selected or checked by AT+WSET and AT+WSEC commands, and it is the only way to handle Wi-Fi mode.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+WSET, AT+WSEC commands save its parameters into the profile automatically, so the user does not need to save the current profile."))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+WSET2=0,\uac00\ub098\ub2e4\u201d,\u7121\u7dda\u5171\u6709\u5668")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:"),"\nAT+WSET2=?\n")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current WiFi configuration Settings")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:"),"\n",">"),(0,l.kt)("p",{parentName:"li"},"   ","<","WiFiMode",">",",","<","SSID",">",",","<","BSSID",">",",","<","Length of SSID",">","\n","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwsec"},"AT+WSEC"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+WSEC=","<","WiFiMode",">",",","<","SecType",">",",","<","Key",">"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," WiFi Security Configuration")),(0,l.kt)("p",null,"<","WiFiMode",">",": Target WiFi mode to set (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Set Wi-Fi mode as STA mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Set Wi-Fi mode as AP mode")))),(0,l.kt)("p",null,"<","SecType",">",": Security type (Optional)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"OPEN"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"WiFi Auto Security")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WEP"),(0,l.kt)("td",{parentName:"tr",align:null},"WEP (* Not support at SoftAP mode)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WPA"),(0,l.kt)("td",{parentName:"tr",align:null},"WPA1 - TKIP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WPAAES"),(0,l.kt)("td",{parentName:"tr",align:null},"WPA1 - AES")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WPA2AES\tWPA2 - AES"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WPA2TKIP"),(0,l.kt)("td",{parentName:"tr",align:null},"WPA2 - TKIP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WPA2"),(0,l.kt)("td",{parentName:"tr",align:null},"WPA2 - Mixed")))),(0,l.kt)("p",null,"<","Key",">",": Security key value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Length"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WEP"),(0,l.kt)("td",{parentName:"tr",align:null},"5 or 13 (ASCII), 10 or 26 (HEX)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WPA"),(0,l.kt)("td",{parentName:"tr",align:null},"8 ~ 63 (ASCII), 128 (HEX)")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"There are 2 Wi-Fi modes in WizFi310, STA mode and SoftAP mode. When users execute AT+WJOIN command, it works as Wi-Fi mode previously selected by the user. It can be selected or checked by AT+WSET and AT+WSEC commands, and it is the only way to handle Wi-Fi mode.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+WSET, AT+WSEC commands save its parameters into the profile automatically, it works as Wi-Fi mode previously selected by the user.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Minimum key length is 8 bytes in WiFi Auto Security.\nIn case of WEP mode and 5 bytes key, you should input the key with HEX type.\nAT+WSEC=0,,12345(X)\nAT+WSEC=0,,3132333435(O)\nIn case of OPEN mode, you should input the 8 bytes dummy string. Then WizFi310 will ignore the dummy key in OPEN mode.\nAT+WSEC=0,,(X)\nAT+WSEC=0,,12345678(O)"))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+WSEC=0,WEP,12345"),(0,l.kt)("li",{parentName:"ul"},"AT+WSEC=1,WPA2,12345678"),(0,l.kt)("li",{parentName:"ul"},"AT+WSEC=0,,123456789")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+WSEC=?\n"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Get the Current Security Mode and Settings"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"<","WiFiMode",">",",","<","SecType",">",",","<","Key",">","[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwnet"},"AT+WNET"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+WNET=","<","DHCP",">",",","<","IP",">",",","<","SN",">",",","<","GW",">")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Network Configuration")),(0,l.kt)("p",null,"<","DHCP",">",": DHCP On/Off (Optional)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"DHCP Off, Static")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"DHCP On, DHCP Client")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Mode")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Meaning"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STA"),(0,l.kt)("td",{parentName:"tr",align:null},"DHCP Client On/Off")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AP"),(0,l.kt)("td",{parentName:"tr",align:null},"Not used. if any, it will be ignored")))),(0,l.kt)("p",null,"<","IP",">",": IP Address (Optional)\n","<","SN",">",": Subnet Mask (Optional)\n","<","GW",">",": Gateway Address (Optional)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Mode"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STA"),(0,l.kt)("td",{parentName:"tr",align:null},"AP(Router) gateway address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AP"),(0,l.kt)("td",{parentName:"tr",align:null},"Not used. if any, it will be ignored")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"When you turn DHCP On in STA Mode, ","<","IP",">",",","<","SN",">",",","<","GW",">"," are not needed. If you input them at this time, they will be stored in the memory. They can be used later when set as Static(DHCO Off) without inputting these parameters.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"In AP mode, DHCP Server will always run despite DHCP option, and Gateway option will not be used, So both options will be ignored."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+WNET=?\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Get Current Network Setting")),(0,l.kt)("p",null,"Note that ","<","IP",">",",","<","SN",">",",","<","GW",">"," address of response are not actual addresses, but addresses stored in the memory. So when DHCP is on, it usually different from actual addresses."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"<","DHCP",">",",","<","IP",">",",","<","SN",">",",","<","GW",">","[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwstat"},"AT+WSTAT"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+WSTAT\n"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Get Current WiFi Status"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"\nIF/SSID/IP-Addr/Gateway/MAC/TxPower(dBm)/RSSI(-dBm)\n...\n","[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwwps"},"AT+WWPS"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+WWPS=","<","Mode",">",",","<","PinNum",">")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," WiFi WPS Connection\nJoin with an AP through WPS method")),(0,l.kt)("p",null,"<","Mode",">",": WPS Mode (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"WPS_PBC_MODE")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"WPS_PIN_MODE")))),(0,l.kt)("p",null,"<","PinNum",">",": Pin Number (Pin Mode: Required, PBC Mode: N/A)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The maximum pin number letter is 8.")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+WWPS=0"),(0,l.kt)("li",{parentName:"ul"},"AT+WWPS=1,12345670")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atwadns"},"AT+WADNS"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:"),"\n",">"),(0,l.kt)("p",{parentName:"li"},"   AT+WADNS=","<","DNS Server1",">",",","<","DNS Server2",">","\n"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Add DNS Server")),(0,l.kt)("p",null,"<","DNS Server 1",">",": DNS Server 1\n","<","DNS Server 2",">",": DNS Server 2"),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+WADNS=8.8.8.8"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("h2",{id:"network-commands"},"Network Commands"),(0,l.kt)("p",null,"Commands related to Network are listed below."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atscon"},"AT+SCON"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:"),"\n",">"),(0,l.kt)("p",{parentName:"li"},"  AT+SCON=","<","OpenType",">",",","<","SocketType",">",",","<","RemoteIP",">",",","<","RemotePort",">",",","<","LocalPort",">",",","<","DataMode",">","\n"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Socket Open/Connect ( User can use max 8 sockets. )\nOpens a socket and if it is a TCP Client, establishes TCP connection with remote peer device.")),(0,l.kt)("p",null,"<","OpenType",">",": Socket open type (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"O"),(0,l.kt)("td",{parentName:"tr",align:null},"open at Once")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S"),(0,l.kt)("td",{parentName:"tr",align:null},"register as a Service")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SO"),(0,l.kt)("td",{parentName:"tr",align:null},"open at Once & register as a Service")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT ONCE: Assigns a socket immediately and if the socket is a TCP Client, tries to connect peer socket.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AS SERVICE: Registers its information to the profile. When WiFi Joined, socket open/connect will be performed automatically. If you want to use this after reset, It should be saved by using AT+MPROF=S"))),(0,l.kt)("p",null,"<","SocketType",">",": Socket protocol to use (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"TSN"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP Server Normal")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"TCN"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP Client Normal")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"TCS"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP Client Secured")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"USN"),(0,l.kt)("td",{parentName:"tr",align:null},"UDP Server Normal")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UCN"),(0,l.kt)("td",{parentName:"tr",align:null},"UDP Client Normal")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"'Secured' means TCP connection through SSL Encryption. It can be used in only TCP Client mode.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Actually, there is no Server/Client concept in UDP protocol. This concept is used to decide peer address purposes. If a UDP Server receives any packet, its default peer address will be changed to the address of the packet, so if you send data after that, it goes to the changed address. But If you use UDP Client, its \u2026default address stored by AT+SCON will never be changed."))),(0,l.kt)("p",null,"<","RemoteIP",">",": Remote IP address"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Protocol"),(0,l.kt)("th",{parentName:"tr",align:null},"Parameter Application"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"TCP Server"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"TCP Client"),(0,l.kt)("td",{parentName:"tr",align:null},"Required")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UDP Server"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UDP Client"),(0,l.kt)("td",{parentName:"tr",align:null},"Required")))),(0,l.kt)("p",null,"<","RemotePort",">",": Remote port number\nSame condition with upper, RemoteIP"),(0,l.kt)("p",null,"<","LocalPort",">",": Local port number (Required)\nLocal port number should not be duplicated with others which have opened before. When the value is 0, in case the socket was a TCP/UDP Client, a random port number will be selected. If it was a TCP/UDP Server, it will return an error message."),(0,l.kt)("p",null,"<","DataMode",">",": Mode to run (Optional, default: 0)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Open as Command mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Open as Data mode")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"About Command/Data mode, refer to Command mode & Data mode")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("p",null,"AT+SCON=O,TSN,,,5000,0\nAT+SCON=S,UCN,192.168.0.10,12345,5000,1 (Profile must be saved)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:"),"\n",">"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+SCON=?\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Previous Input Parameters"))),(0,l.kt)("p",null,"Use for check if previous input parameters are correct."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"<","OpenType",">",",","<","SocketType",">",",","<","RemoteIP",">",",","<","RemotePort",">",",","<","LocalPort",">",",","<","DataMode",">","[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsmgmt"},"AT+SMGMT"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+SMGMT=","<","SocketID",">"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Socket Management - Socket Close")),(0,l.kt)("p",null,"Closes the selected socket and releases all its resources."),(0,l.kt)("p",null,"<","SocketID",">",": Socket ID (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0 ~ 7"),(0,l.kt)("td",{parentName:"tr",align:null},"The socket ID to close")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ALL"),(0,l.kt)("td",{parentName:"tr",align:null},"All the opened sockets")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Opened socket information can be found by using '?' option.")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+SMGMT=5"),(0,l.kt)("li",{parentName:"ul"},"AT+SMGMT=ALL")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"   AT+SMGMT=?\n")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Socket Management - Get Opened Socket Status\nThis prints all of the opened sockets statuses."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"\nNumber of Sockets : x (SCID/Socket/Mode/Remote/Local/DataMode)\n","<","SocketID",">",",","<","SocketAddr",">",",","<","SocketType",">",",","<","RemoteIP",">",",","<","RemotePort",">",",","<","LocalPort",">",",","<","DataMode",">","\n...\n","[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atssend"},"AT+SSEND"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+SSEND=","<","SocketID",">",",","<","RemoteIP",">",",","<","RemotePort",">",",","<","SendSize",">",",","<","Timeout",">"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning: Data Send"))),(0,l.kt)("p",null,"This is used only in command mode, not in data mode. It is not required in data mode as you can input directly, but if you exit from data mode to command mode by inputting '+++', you can send data through this command."),(0,l.kt)("p",null,"<","SocketID",">",": Socket ID (Required)"),(0,l.kt)("p",null,"<","RemoteIP",">",": Remote IP Address"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Protocol"),(0,l.kt)("th",{parentName:"tr",align:null},"Parameter Application"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"TCP Server"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"TCP Client"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UDP Server"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UDP Client"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In case of TCP Server waiting for a client on listen state or in case of undecided remote address of the UDP Server (meaning its remote address is 0.0.0.0:0), this command will fail.")),(0,l.kt)("p",null,"<","RemotePort",">",": Remote Port Number\nSame condition with upper, RemoteIP"),(0,l.kt)("p",null,"<","SendSize",">",": Data size to send (Required)\nValid Range: 1 ~ 100,000,000 Byte"),(0,l.kt)("p",null,"<","Timeout ",">",": Set timeout value (milliseconds unit) (Optional)\nIf the transmission takes time more time than timeout value, it will fail and return error response. Default value is 10s + (100s / 1 MB)"),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+SSEND=0,,,3"),(0,l.kt)("li",{parentName:"ul"},"AT+SSEND=1,192.168.0.100,5000,1000000,50000")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsdata"},"AT+SDATA"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+SDATA\n"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Return to Data Mode")),(0,l.kt)("p",null,"In data mode, it can be changed to command mode temporally by using serial '+++' input. After that, to return to the data mode, you can use this command. If it is not data mode, ","[ERROR]"," response will be returned."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsform"},"AT+SFORM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+SFORM=","<","Format",">",",","<","Start",">",",","<","Delim",">",",","<","End",">",",","<","Cls1",">",",","<","Cls2",">")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Define Data Receive Header Form")),(0,l.kt)("p",null,'Define the header of received data which is used at command mode. For example, default receiving format look like below.\n\u201c{0,192.168.0.216,59834,5}hello(0xd)(0xa)\u201d\nThis means ASCII code "hello" was received from 192.168.0.216:59834 by\nsocket ID 0, and its length was 5. You can change this format to suit\nyour system through this command.  '),(0,l.kt)("p",null,'Factory default option is "111111111,7B,2C,7D,0D,0A"  '),(0,l.kt)("p",null,"<","Format",">",": Decide each of header items to use. (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","If you want to set it to active, input '1'.",(0,l.kt)("br",{parentName:"p"}),"\n","If not, input '0'.  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Order"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Header Start")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Socket ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Delimiter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Remote IP Address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Remote Port Number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Data Length")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Header End")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"Data End 1/2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"Data End 2/2")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"At default format, '{' '}' is header start and end, ',' is delimiter,\n0xd,0xa is data end 1,2.",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("p",null,"<"," Start",">",": Header Start Character (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","<"," Delim",">",": Delimiter Character (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","<"," End",">",": Header End Character (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","<"," Cls1",">",": Data End Character 1/2 (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","<"," Cls2",">",": Data End Character 2/2 (Required)  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SFORM=111111111,7B,2C,7D,0D,0A")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SFORM=101100110,5B,2F,5D,0D,00  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+SFORM=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current Data Receive Header Form")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:"),"\n","<","Format",">",",","<","Start",">",",","<","Delim",">",",","<","End",">",",","<","Cls1",">",",","<","Cls2",">","\n","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsopt"},"AT+SOPT"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Format:"),"\nAT+SOPT=","<","Option",">",",","<","SocketID",">",",","<","Socket Level",">",",","<","Option Name",">",",","<","Option Value"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," S2W miscellaneous option\n","<","Option",">",": Option to configure (Required)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Set socket option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("del",{parentName:"td"},"2")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("del",{parentName:"td"},"Get socket option"))))),(0,l.kt)("p",null,"<","SocketID",">",": Socket ID (Required)"),(0,l.kt)("p",null,"<","Socket Level",">",": Socket Level (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Socket Level"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4095"),(0,l.kt)("td",{parentName:"tr",align:null},"SOL_SOCKET")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"IPPROTO_IP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"IPPROTO_TCP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"IPPROTO_UDP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"136"),(0,l.kt)("td",{parentName:"tr",align:null},"IPPROTO_UDPLITE")))),(0,l.kt)("p",null,"<","Option Name",">"," : Option name for socket level options for level\nSOL_SOCKET"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"SO_REUSEADDR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"SO_KEEPALIVE")))),(0,l.kt)("p",null,"options for level IPPROTO_IP"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"IP_TOS")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"IP_TTL")))),(0,l.kt)("p",null,"options for level IPPROTO_TCP"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP_NODELAY")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP_KEEPALIVE")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP_KEEPIDLE")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP_KEEPINTVL")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP_KEEPCNT")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SOPT=1,0,4095,8,1")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SOPT=1,0,6,3,10")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SOPT=1,0,6,4,15")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SOPT=1,0,6,5,3")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"   ","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsopt1"},"AT+SOPT1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:"),"\nAT+SOPT1=","<","Option",">",",","<","Value"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," S2W miscellaneous option")))),(0,l.kt)("p",null,"<","Option",">",": Option to configure (Required) ","<","Value",">",": Value of the\noption (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"Escape sequence(+++) Timer(millisecond, default 1000, 1~10000)")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+SOPT1=10,500")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"}," ","[OK]"))),(0,l.kt)("h2",{id:"management-commands"},"Management Commands"),(0,l.kt)("p",null,"Commands related to system management are listed below."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmprof"},"AT+MPROF"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+MPROF=&#60;Action\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Profile Management"),(0,l.kt)("p",{parentName:"li"}," You can save/load the environmental\ninformation in the RAM to/from flash ROM, or check the setting values in\nboth of them through this command.",(0,l.kt)("br",{parentName:"p"}),"\n","(- AT+WSET, AT+WSEC are immediately stored in the Flash ROM)",(0,l.kt)("br",{parentName:"p"}),"\n",""))))),(0,l.kt)("p",null,"<","Action",">",": The action to perform (Required)  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"VD"),(0,l.kt)("td",{parentName:"tr",align:null},"Get saved profile")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"VG"),(0,l.kt)("td",{parentName:"tr",align:null},"Get current profile")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"L"),(0,l.kt)("td",{parentName:"tr",align:null},"Load profile")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S"),(0,l.kt)("td",{parentName:"tr",align:null},"Save profile")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"There is no '?' option at this command.  ")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MPROF=S  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:"),"\n","[OK]"),(0,l.kt)("p",{parentName:"li"},"+WSET=...\n+WSEC=...\n+WNET=...\n+WREG=...\n+SCON=...\n+SFORM=...\n+MMSG=...\n+MMAC=...\n+USET=...\n+MECHO=...\n","[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmfdef"},"AT+MFDEF"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"  AT+MFDEF=FR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Perform Factory Reset")))),(0,l.kt)("p",null,"Factory Reset means that all of\nenvironmental variables return back to the default state. (You can check\nthat by using AT+MPROF command)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmreset"},"AT+MRESET"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MRESET"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Perform System Reset")))),(0,l.kt)("p",null,"System will reboot after this command."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))),(0,l.kt)("h4",{id:"atmmsg"},"AT+MMSG"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"   AT+MMSG=","<","Level"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Set Message Print Level")),(0,l.kt)("p",{parentName:"li"},"<","Level",">",": Message Print Level (Required)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Not Print Responses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Print Responses, Events (Default)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Print Responses, Events, Debug Logs")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MMSG=2  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:"),"\nAT+MMSG=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current Message Print Level"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","Level",">","\n","[OK]"))),(0,l.kt)("h4",{id:"atmmac"},"AT+MMAC"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+MMAC=&#60;MAC\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Set MAC Address"),(0,l.kt)("p",{parentName:"li"}," ","<","MAC",">",": MAC Address (separated by colon)\n(Required)",(0,l.kt)("br",{parentName:"p"}),"\n",""))))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MMAC=00:08:DC:11:22:33  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+MMAC=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current MAC Address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","MAC",">","\n","[OK]"))),(0,l.kt)("h4",{id:"atminfo"},"AT+MINFO"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MINFO"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get System Information")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"FW version / HW version\n","<","FWver",">"," / ","<","HWver",">","\n","[OK]"))))),(0,l.kt)("h4",{id:"atmecho"},"AT+MECHO"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+MECHO=&#60;Action\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Set Echo Mode"),(0,l.kt)("p",{parentName:"li"}," If you turn the echo mode off, you cannot\nsee the characters that you inputted returning. It is easy to use to\nturn off when Host MCU handles AT Command control.",(0,l.kt)("br",{parentName:"p"}),"\n",""))))),(0,l.kt)("p",null,"<","Action",">",": Echo Mode (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","^ Parameter ^ Meaning ^"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Echo Off")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Echo On (Default)")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MECHO=0  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+MECHO=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current Echo Mode")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","Mode",">","\n","[OK]"))),(0,l.kt)("h4",{id:"atmhelp"},"AT+MHELP"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MHELP"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Print Command Description and Usage")))),(0,l.kt)("p",null,"This is command usage guide for user\nconvenience. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"...\n","[OK]"))),(0,l.kt)("h4",{id:"atmmcups"},"AT+MMCUPS"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Currently Not Available"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmwifips"},"AT+MWIFIPS"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MWIFIPS=","<","Action",">",",","<","Delay"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Wi-Fi Power Save Enable/Disable")))),(0,l.kt)("p",null,"Wi-Fi power save mode can be selected\nthrough this command.  "),(0,l.kt)("p",null,"<","Action",">"," : Wi-Fi Power Save Mode (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Wi-Fi Power Save Mode Disable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Wi-Fi Power Save Mode Enable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Enables power save mode while attempting to maximize throughput")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To using Wi-Fi Power Save Mode, WizFi310 has to connect to Access\nPoint. And WizFi310 can only use this mode in station mode.",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("p",null,"<","Delay ",">"," : Return to Sleep Delay",(0,l.kt)("br",{parentName:"p"}),"\n","If it is set with a bigger value, the performance will improve but the\npower consumption will rise."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Action"),(0,l.kt)("th",{parentName:"tr",align:null},"Application"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Required")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"This parameter is used only to set 2 of ","<","Action",">"," parameter.  ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"It must be set to a multiple of 10. When set to 0, the timeout period\ndefault to 2 beacon intervals (approximately 204ms).",(0,l.kt)("br",{parentName:"p"}),"\n","")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"It can be set to 0 ~ 90 "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+MWIFIPS=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current Wi-Fi Power Save Status"))),(0,l.kt)("p",null,"<","Status ",">"," : Current Wi-Fi Power Save\nStatus"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return value"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Wi-Fi Power Save Mode Disable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Wi-Fi Power Save Mode Enable")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atuset"},"AT+USET"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+USET=","<","Baudrate",">",",","<","Parity",">",",","<","WordLen",">",",","<","StopBit",">",",","<","FlowCon"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," UART Configuration")))),(0,l.kt)("p",null,'UART parameter can be set through this\ncommand. Factory default parameter is "115200,N,8,1,N ".  '),(0,l.kt)("p",null,"<","Baudrate",">",": Set the Baud-Rate. (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"300"),(0,l.kt)("td",{parentName:"tr",align:null},"300 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"600"),(0,l.kt)("td",{parentName:"tr",align:null},"600 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1200"),(0,l.kt)("td",{parentName:"tr",align:null},"1200 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2400"),(0,l.kt)("td",{parentName:"tr",align:null},"2400 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4800"),(0,l.kt)("td",{parentName:"tr",align:null},"4800 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9600"),(0,l.kt)("td",{parentName:"tr",align:null},"9600 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"14400"),(0,l.kt)("td",{parentName:"tr",align:null},"14400 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"19200"),(0,l.kt)("td",{parentName:"tr",align:null},"19200 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"38400"),(0,l.kt)("td",{parentName:"tr",align:null},"38400 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"57600"),(0,l.kt)("td",{parentName:"tr",align:null},"57600 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"115200"),(0,l.kt)("td",{parentName:"tr",align:null},"115200 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"230400"),(0,l.kt)("td",{parentName:"tr",align:null},"230400 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"460800"),(0,l.kt)("td",{parentName:"tr",align:null},"460800 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"921600"),(0,l.kt)("td",{parentName:"tr",align:null},"921600 bps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1843200"),(0,l.kt)("td",{parentName:"tr",align:null},"1843200 bps")))),(0,l.kt)("p",null,"<","Parity",">",": Set the Parity-Bit type. (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"N"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"O"),(0,l.kt)("td",{parentName:"tr",align:null},"Odd")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"E"),(0,l.kt)("td",{parentName:"tr",align:null},"Even")))),(0,l.kt)("p",null,"<","WordLen",">",": Set the Word-Length. (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"7 bits")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"8 bits")))),(0,l.kt)("p",null,"<","StopBit",">",": Set the Stop-Bit. (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1 bits")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"2 bits")))),(0,l.kt)("p",null,"<","FlowCon",">",": Set the Flow-Control method. (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"N"),(0,l.kt)("td",{parentName:"tr",align:null},"None")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"HW"),(0,l.kt)("td",{parentName:"tr",align:null},"Hardware Flow Control")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+USET=115200,N,8,1,N"),(0,l.kt)("li",{parentName:"ul"},"AT+USET=921600,N,8,2,HW  ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")," "),(0,l.kt)("p",{parentName:"li"},"  ","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+USET=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current UART Setting")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","Baudrate",">",",","<","Parity",">",",","<","WordLen",">",",","<","StopBit",">",",","<","FlowCon",">","\n","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmcustom"},"AT+MCUSTOM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MCUSTOM=","<","custom code  - ",(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Set to customized settings by request of specific\ncustomers."))),(0,l.kt)("p",null,"Examples)  "),(0,l.kt)("p",null,"Default custom code is WIZNET  "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MCUSTOM=WIZNET "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[OK]")))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+MCUSTOM=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get current custom code")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"WIZNET\n","[OK]"))),(0,l.kt)("h4",{id:"atmaircmd"},"AT+MAIRCMD"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"  AT+MAIRCMD=","<","OpenType",">",",","<","SocketType",">",",","<","LocalPort",">",",","<","Option"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Configure Air Command mode")))),(0,l.kt)("p",null,"<","OpenType",">",": Air Command mode type\n(Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"O"),(0,l.kt)("td",{parentName:"tr",align:null},"open at Once")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S"),(0,l.kt)("td",{parentName:"tr",align:null},"register as a Service")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT ONCE: Assigns a Air-Command-socket immediately.  "),(0,l.kt)("li",{parentName:"ul"},"AS SERVICE: Registers its information to the profile. When WiFi\nJoined, Air-Command-socket open will be performed automatically. If you\nwant to use this after reset, It should be saved by using AT+MPROF=S",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("p",null,"<","SocketType",">",": Air-Command-Socket protocol to use (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"T"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP Server Normal")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"U"),(0,l.kt)("td",{parentName:"tr",align:null},"UDP Server Normal")))),(0,l.kt)("p",null,"<","LocalPort",">",": Local port number (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","Local port number should not be duplicated with others which have opened\nbefore. When the value is 0, in case the socket was a TCP/UDP Client, a\nrandom port number will be selected. If it was a TCP/UDP Server, it will\nreturn an error message.  "),(0,l.kt)("p",null,"<","Option",">",": Reserved (Required)\nExamples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MAIRCMD=O,T,50001,0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MAIRCMD=S,U,50001,0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MAIRCMD=?"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","OpenType",">",",","<","SocketType",">",",","<","LocalPort",">",",","<","Option",">","\n","[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmevtmsg"},"AT+MEVTMSG"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MEVTMSG=","<","Status"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Print ","[Listen x]"," as soon as it opens up a socket\nthrough TCP server.")))),(0,l.kt)("p",null,"It is able to print TCP Server Status\nwith ","[Listen x]",".(x:socket number).",(0,l.kt)("br",{parentName:"p"}),"\n","A user can decide whether WizFi310 will print out Listen message or not\nin initialization mode on TCP server.",(0,l.kt)("br",{parentName:"p"}),"\n","This command is made for mbed library.",(0,l.kt)("br",{parentName:"p"}),"\n","Uses 1 Parameter and set status of socket as 0,1 for each relevant below\ntable.  "),(0,l.kt)("p",null,"<","Status",">",": Printing status (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","^ Parameter ^ Meaning ^"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"No display ","[Listen x]"," message")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Display ","[Listen x]"," message")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MEVTMSG=0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MEVTMSG=1"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmevtform"},"AT+MEVTFORM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MEVTFORM=","<","format"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Define Event Message Form")))),(0,l.kt)("p",null,"It is able to control format and printing\nstatus of WizFi310 event messages.",(0,l.kt)("br",{parentName:"p"}),"\n","Uses 10 Parameters and set event message as 0,1,2 for each relevant\none  "),(0,l.kt)("p",null,"<","Format",">",": Event Message Format (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","0: No display",(0,l.kt)("br",{parentName:"p"}),"\n","1: Full Message",(0,l.kt)("br",{parentName:"p"}),"\n","2: Short Message  "),(0,l.kt)("p",null,"AT+MEVTFORM=abcdefghijkl"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",{class:"header"},(0,l.kt)("th",null),(0,l.kt)("th",null,"0(No display)"),(0,l.kt)("th",null,"1(Full Message,Default)"),(0,l.kt)("th",null,"2(Short Message)"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"a"),(0,l.kt)("td",null),(0,l.kt)("td",null,"WizFi310 Version 1.0.0.6 (WIZnet Co.Ltd)rn"),(0,l.kt)("td",null,"rn[0]rn")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"b"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[CONNECT %x]rn"),(0,l.kt)("td",null,"rn[1]rn")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"c"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[DISCONNECT %x]rn"),(0,l.kt)("td",null,"rn[2]rn")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"d"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[Link-Up Event]rn",(0,l.kt)("br",null),"IP Addr : ...rn",(0,l.kt)("br",null),"Gateway : ...rn"),(0,l.kt)("td",null,"rn[3]rn")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"e"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[Link-Down Event]rn"),(0,l.kt)("td",null,"rn[4]rn")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"f"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[Reset Event]rn"),(0,l.kt)("td",null,"rn[5]rn")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"g"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[TCP Send Error]rn"),(0,l.kt)("td",null,"rn[6]rn")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"h"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[P2P Fail Event]rn"),(0,l.kt)("td",null,"rn[7]rn")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"i"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[LISTEN %x]rn"),(0,l.kt)("td",null,"rn[8]rn")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"j"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[MQTT CONNECT]rn"),(0,l.kt)("td",null,"rn[9]rn")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"k"),(0,l.kt)("td",null),(0,l.kt)("td",null,"rn[MQTT DISCONNECT]rn"),(0,l.kt)("td",null,"rn[a]rn")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MEVTFORM=111111111111")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MEVTFORM=122220000000")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MEVTFORM=000000000000"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+MEVTFORM=?"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Get Current Event Message Form")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","Format",">","\n","[OK]"))),(0,l.kt)("h4",{id:"atmupgrade"},"AT+MUPGRADE"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MUPGRADE"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:"),' This command is for upgrading firmware of WizFi310 After using this command, WizFi310 will wait UART signal for XMODEM protocol. After this command, You have to send binary file which you want to upload using XMODEM protocol. If it is done successfully, WizFi310 will display "',"[OK]",'" message and then restart.  ')),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MUPGRADE"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"function-commands"},"Function Commands"),(0,l.kt)("p",null,"Commands related to additional functions are listed below."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atfping"},"AT+FPING"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+FPING=","<","RepeatCnt",">",",","<","TargetIP"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," PING Test")))),(0,l.kt)("p",null,"<","RepeatCnt",">",": Repeat Count (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","Valid Range: 1 ~ 50 (unit:number of times)  "),(0,l.kt)("p",null,"<","TargetIP",">",": Target IP Address (Required)  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FPING=3,192.168.0.10  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"Ping Reply :  xxx ms\n...\n","[OK]"))))),(0,l.kt)("h4",{id:"atfdns"},"AT+FDNS"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+FDNS=&#60;HostName&#62;,&#60;Timeout\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," DNS Query"),(0,l.kt)("p",{parentName:"li"}," ","<","HostName",">",": The domain name to search\n(Required)",(0,l.kt)("br",{parentName:"p"}),"\n",""))))),(0,l.kt)("p",null,"<","Timeout",">",": Maximum Delay (milliseconds unit) (Required)",(0,l.kt)("br",{parentName:"p"}),"\n","Valid Range: 1,000 ~ 1,000,000 (unit:ms)(Recommend: 1000)  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FDNS=",(0,l.kt)("a",{parentName:"p",href:"http://www.google.com,1000"},"www.google.com,1000"),"  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"xxx.xxx.xxx.xxx\n","[OK]"))))),(0,l.kt)("h4",{id:"atfgpio"},"AT+FGPIO"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+FGPIO=","<","gpio_number",">",",","<","action:0",">",",","<","config_value",">","\nAT+FGPIO=","<","gpio_number",">",",","<","action:1",">",",","<","config_value",">","\nAT+FGPIO=","<","gpio_number",">",",","<","action:2",">",",","<","gpio_value",">","\nAT+FGPIO=","<","gpio_number",">",",","<","action:3",">",",","<","gpio_value"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," GPIO Control Function",(0,l.kt)("br",{parentName:"li"}),"")))),(0,l.kt)("p",null,"GPIO can be set through this command.",(0,l.kt)("br",{parentName:"p"}),"\n","<","gpio_number",">",": Available GPIO number (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return value"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIOB 3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIOC 4")))),(0,l.kt)("p",null,"<","action",">",": The action to perform (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return value"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO Initialize as a Input mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO Initialize as a Output mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Get GPIO value of ","<","gpio_number",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Set GPIO value of ","<","gpio_number",">")))),(0,l.kt)("p",null,"<","config_value",">",": Current GPIO Configuration Value (It can be used when\naction is 0, 1)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return value"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"PULL_NONE (Not use pull-up & pull-down resistor)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"PULL_UP (Input with an internal pull-up resistor)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"PULL_DOWN (Input with an internal pull-down resistor)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"OPEN_DRAIN (Output open drain)")))),(0,l.kt)("p",null,"<","gpio_value",">",": Current GPIO Value (It can be used when action is 2, 3)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return value"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Low")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"High")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FGPIO=3,1,1 ","<","<"," Initialize GPIOB 3 as a Output mode")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FGPIO=3,3,0 ","<","<"," Set GPIO value of GPIOB 3 to Low")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FGPIO=3,3,1 ","<","<"," Set GPIO value of GPIOB 3 to High")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FGPIO=3,2,0 ","<","<"," Get GPIO value of GPIOB 3"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"))),(0,l.kt)("p",{parentName:"li"},"If ","<","action",">"," is 2"),(0,l.kt)("p",{parentName:"li"},"   ","<","gpio_value",">","\n","[OK]","\nex)\nAT+FGPIO=3,2,0\n0\n","[OK]","\n"))),(0,l.kt)("p",null,"If ","<","action",">"," is 0, 1, 3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"[OK]\n")),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+FGPIO=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get available GPIO number"))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FGPIO=? "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","gpio_num_1",">",",","<","gpio_num_2",">","\n","[OK]"),(0,l.kt)("p",{parentName:"li"},"ex)\n3,4\n","[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atfgetadc"},"AT+FGETADC"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+FGETADC=?"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Read ADC from ADC pin of WizFi310 when using this AT\nCommand  ")))),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FGETADC=? "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"xxxx\n","[OK]"),(0,l.kt)("p",{parentName:"li"},"ex)\n1697\n","[OK]"))))),(0,l.kt)("h4",{id:"atfsock"},"AT+FSOCK"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+FSOCK=&#60;Option&#62;,&#60;Value\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," SOCKET Extension Option"),(0,l.kt)("p",{parentName:"li"}," When there is no socket connected, it\ntries to reconnect the server using this option.",(0,l.kt)("br",{parentName:"p"}),"\n","6,8 options must be set as service mode(AT+SCON=S) for Auto\nReconnection.",(0,l.kt)("br",{parentName:"p"}),"\n","Profile(AT+MPROF=S) has to be saved after AT+FSOCK",(0,l.kt)("br",{parentName:"p"}),"\n",""))))),(0,l.kt)("p",null,"This is for extended options of Socket. It will be added continuously."),(0,l.kt)("p",null,"<","Option",">",": Extended options of Socket (Required)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"TCP Send error timeout (value : 2000~20000ms)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Recreates Socket then attempts Auto-Reconnection after ","<","Value",">"," seconds (value: 10~1000)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"Automatically resets WizFi310 module. when there is no socket connected (value: 5~1000)")))),(0,l.kt)("p",null,"<","Value",">"," : Value of extended option (Required)"),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FSOCK=1,5000")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FSOCK=6,10")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+FSOCK=8,30  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+FSOCK=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current extended options of socket")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","Extened option 1",">","<","2",">","<","3",">","<","4",">","<","5",">","<","6",">","<","7",">","<","8",">","\n","[OK]"),(0,l.kt)("p",{parentName:"li"},"ex)\n5000,0,0,0,0,10,0,30"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atfota"},"AT+FOTA"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+FOTA=&#60;Server IP&#62;,&#60;Server Port\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Launch OTA Mode"),(0,l.kt)("p",{parentName:"li"}," User can update firmware in OTA mode\nwhich can be entered by this command. Refer to ",(0,l.kt)("a",{parentName:"p",href:"firmware_upgrade_using_ota"},"Wi-Fi\nOTA")))))),(0,l.kt)("p",null,"OTA Server should run some protocol. that included in OTA tool."),(0,l.kt)("p",null,"<","Server IP",">",": Firmware Server IP"),(0,l.kt)("p",null,"<","Server Port",">"," : Firmware Server Port"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"mqtt-commands"},"MQTT Commands"),(0,l.kt)("p",null,'MQTT (Message Queuing Telemetry Transport) is a light weight messaging\nprotocol for use on top of the TCP/IP protocol. It is designed for\nconnections with remote locations where a "small code footprint" is\nrequired or the network bandwidth is limited.',(0,l.kt)("br",{parentName:"p"}),"\n","It is a communication protocol which almost can link all networked\nobjects with the external, and it is used as a sensor.  "),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/MQTT"},"Wikipedia"),"  "),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"examples#example---mqtt"},"WizFi310 MQTT Example"),"  "),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmqttset"},"AT+MQTTSET"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"  AT+MQTTSET=","<","UserName",">",",","<","Password",">",",","<","ClientID",">",",","<","AliveTime"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," This command is used to initialize the necessary\nparameters of MQTT connection. ")))),(0,l.kt)("p",null,"<","UserName",">",": The User Name used in the\nbroker authentication (Required, Max: 50 Character)",(0,l.kt)("br",{parentName:"p"}),"\n","<","Password",">",": The Password used in the broker authentication (Required,\nMax: 50 Character)",(0,l.kt)("br",{parentName:"p"}),"\n","<","ClientID",">",": The Client ID connected to the broker (Required, Max: 50\nCharacter)",(0,l.kt)("br",{parentName:"p"}),"\n","<","AliveTime",">",": The keep-alive time setting with the broker (Required,\n30S ~ 300S)  "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'this command needs to be invoked before the command of "AT+MQTTCON"\nconnecting the broker.',(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MQTTSET=wiznet,12345678,wiznet-01,60  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+MQTTSET=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current Information of MQTT Connection and\nAuthentication")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","UserName",">",",","<","Password",">",",","<","ClientID",">",",","<","AliveTime",">","\n","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmqttcon"},"AT+MQTTCON"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MQTTCON=","<","Con/Discon",">",",","<","BrokerIP",">",",","<","BrokerPort",">",",","<","SSL_Enable"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Implement MQTT to connect the Broker. ")))),(0,l.kt)("p",null,"<","Con/Discon",">",": MQTT Connection\n(Required)  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Connect to the broker")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Disconnect from the broker")))),(0,l.kt)("p",null,"<","BrokerIP",">",": IP address of the broker (Optional)  "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"It can be used when the WizFi310 connect to broker",(0,l.kt)("br",{parentName:"li"}),"<","BrokerPort",">",": Broker Port (optional, default: 1883)  "),(0,l.kt)("li",{parentName:"ul"},"It can be used when the WizFi310 connect to broker",(0,l.kt)("br",{parentName:"li"}),"<","SSL_Enable",">",": whether to enable secure connection (optional, default:\n0)  "),(0,l.kt)("li",{parentName:"ul"},"It can be used when the WizFi310 connect to broker  ")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Not to enable SSL connection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable SSL connection")))),(0,l.kt)("p",null,"Connection Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MQTTCON=1,192.168.1.229,1883,0 ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MQTTCON=1,192.168.1.229,8883,1 "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[MQTT CONNECT][OK]")))),(0,l.kt)("p",null,"Disconnection Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MQTTCON=0 "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[MQTT DISCONNECT][OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"AT+MQTTCON=?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Get Current Connection Status")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","Connection Status",">","\n","[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmqttsub"},"AT+MQTTSUB"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"  AT+MQTTSUB=","<","Sub/Unsub",">",",","<","Topic"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Such topics will be pushed to the WizFi310 when\nreceived by the Broker,",(0,l.kt)("br",{parentName:"li"}),"for example, wiznet/temp indicates that the WizFi310 has subscribed\ndata (input data) sent by other clients. ")))),(0,l.kt)("p",null,"<","Sub/Unsub",">",": Subscribe/Unsubscribe the\nTopic (Required)  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Unsubscribe the topic")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Subscribe the topic")))),(0,l.kt)("p",null,"<","Topic",">",": Themes subscribed by the WizFi310 (Required, Max: 64\nCharacter)  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MQTTSUB=1,wiznet/temp ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MQTTSUB=0,wiznet/temp"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atmqttpub"},"AT+MQTTPUB"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+MQTTPUB=","<","Topic",">",",","<","Length"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Publish the message to subscribed Client")))),(0,l.kt)("p",null,"<","Topic",">",": Themes subscribed by the WizFi310 (Required, Max: 64\nCharacter)",(0,l.kt)("br",{parentName:"p"}),"\n","<","Length",">",": Length of the message (Required)  "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"After using this command, You must input the message.",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+MQTTPUB=wiznet/temp,3  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"<","Length",">","\n","[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"gmmp-commands"},"GMMP Commands"),(0,l.kt)("p",null,"GMMP Commands are for SK Telecom in Korea. So these command can't use in\nother country. (It can be used only in Korea). So descriptions for these\ncommands will be written in Korea."),(0,l.kt)("p",null,"GMMP\ub294 M2M \ub2e8\ub9d0\uacfc \uac1c\ubc29\ud615 M2M \ud50c\ub7ab\ud3fc(OMP)\uc0ac\uc774\uc758 TCP \uae30\ubc18 \uc5f0\ub3d9 \uaddc\uaca9\uc73c\ub85c\uc11c, \ub2e8\ub9d0 \ub4f1\ub85d/\ud574\uc9c0, \uc8fc\uae30\ubcf4\uace0, \ub2e8\ub9d0 \uc81c\uc5b4\n\ub4f1\uc758 \uae30\ub2a5\uc744 \uc218\ud589\ud558\ub294 SKTelecom \ub0b4\ubd80 \uaddc\uaca9\uc774\ub2e4."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atgmmpset"},"AT+GMMPSET"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+GMMPSET=","<","Con/Discon",">",",","<","ThingPlug IP",">",",","<","Thingplug Port",">",",","<","Domain Code",">",",","<","Auth ID",">",",","<","Manufacture ID",">",",","<","Device ID"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," GMMP_GW_Registration \uc808\ucc28\ub97c \uc218\ud589\ud558\uae30 \uc704\ud55c \uc124\uc815. \uc0ac\uc804\uc5d0\n","<",(0,l.kt)("a",{parentName:"li",href:"https://sandbox.sktiot.com%EC%97%90%EC%84%9C&#62"},"https://sandbox.sktiot.com\uc5d0\uc11c",">"),"; \ub514\ubc14\uc774\uc2a4(TCP) \ub4f1\ub85d\uc774 \ub418\uc5b4 \uc788\uc5b4\uc57c G/W, Device \ub4f1\ub85c\n\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"li"}),"ThingPlug\uc758 IP, Port, Domain Code, WizFi310\uc758 Auth ID, Manufacture ID,\nDevice ID\ub97c \uc124\uc815\ud55c\ub2e4.  ")))),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",{class:"header"},(0,l.kt)("th",null,"Element"),(0,l.kt)("th",null,"Example"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"Con/Discon"),(0,l.kt)("td",null,"1 or 0"),(0,l.kt)("td",null,"1: GMMP_GW_Registration\uacfc GMMP_Delivery\ub97c \uc218\ud589\ud55c\ub2e4. GMMP_Delivery\ub294 AT+GMMPDATA\uac00 \uc124\uc815\ub418\uc5b4\uc788\uc5b4\uc57c \ud55c\ub2e4.",(0,l.kt)("br",null),"0: GMMP_Delivery\ub97c \uc911\uc9c0\ud55c\ub2e4.")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"ThingPlug IP"),(0,l.kt)("td",null,"61.250.21.211"),(0,l.kt)("td",null,"ThingPlug\uc758 IP\ub97c \uc785\ub825\ud55c\ub2e4.")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"ThingPlug Port"),(0,l.kt)("td",null,"31002"),(0,l.kt)("td",null,"ThingPlug\uc758 TCP Listen Port\ub97c \uc785\ub825\ud55c\ub2e4.",(0,l.kt)("br",null),"ThingPlug->\ub9c8\uc774\ud398\uc774\uc9c0->\uc11c\ube44\uc2a4 \uc815\ubcf4\uc218\uc815\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"Domain Code"),(0,l.kt)("td",null,"ThingPlug"),(0,l.kt)("td",null,"ThingPlug\uc758 \uc11c\ube44\uc2a4\uba85\uc744 \uc785\ub825\ud55c\ub2e4.",(0,l.kt)("br",null),"ThingPlug->\ub9c8\uc774\ud398\uc774\uc9c0->\uc11c\ube44\uc2a4 \uc815\ubcf4\uc218\uc815\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"Auth ID"),(0,l.kt)("td",null,"0008dc1e000000"),(0,l.kt)("td",null,"GW ID, \ub514\ubc14\uc774\uc2a4 \ub4f1\ub85d\uc2dc \uc785\ub825\ud55c MAC Address\ub97c \uc785\ub825\ud55c\ub2e4.",(0,l.kt)("br",null),"ThingPlug->\ub514\ubc14\uc774\uc2a4 \uc815\ubcf4->\ub514\ubc14\uc774\uc2a4 \uc870\ud68c\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"Manufacture ID"),(0,l.kt)("td",null,"WIZnet_GWMFID"),(0,l.kt)("td",null,"\uc81c\uc870\uc0ac ID\ub97c \uc785\ub825\ud55c\ub2e4.",(0,l.kt)("br",null),"ThingPlug->\ub514\ubc14\uc774\uc2a4 \uc815\ubcf4->\ub514\ubc14\uc774\uc2a4 \uc870\ud68c\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"Device ID"),(0,l.kt)("td",null,"deviceID"),(0,l.kt)("td",null,"\ub514\ubc14\uc774\uc2a4 ID\ub97c \uc785\ub825\ud55c\ub2e4.",(0,l.kt)("br",null),"\ub514\ubc14\uc774\uc2a4 \uace0\uc720\uc758 ID\ub97c \uc0ac\uc6a9\ud55c\ub2e4.")))),"Connection Examples)",(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+GMMPSET=1,61.250.21.211,31002,ThingPlug,0008dc1e000000,WIZnet_GWMFID,WizFi310 "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Response:"),"[GMMP CONNECT][OK]")))),(0,l.kt)("p",null,"Disconnection Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+GMMPSET=0 "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[GMMP DISCONNECT][OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atgmmpdata"},"AT+GMMPDATA"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")),(0,l.kt)("p",{parentName:"li"},"  AT+GMMPDATA=","<","Option",">",",","<","Data"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," OMP\ub85c \ubcf4\ub0b4\uace0 \uc2f6\uc740 \ub370\uc774\ud130\ub97c \ud574\ub2f9 AT command\ub97c \uc774\uc6a9\ud574\uc11c \uc124\uc815\ud560 \uc218 \uc788\ub2e4.",(0,l.kt)("br",{parentName:"li"}),"\uc635\uc158\uc5d0 \ub530\ub77c AT Command \uc774\ud6c4 \uc989\uc2dc \ubcf4\ub0b4\uac70\ub098, \uc124\uc815\ub41c \uc8fc\uae30\ub9c8\ub2e4(AT+GMMPOPT\ub85c \uc124\uc815) \ub370\uc774\ud130(Report\ntype: Collect Data)\ub97c \ubcf4\ub0bc \uc218 \uc788\ub2e4.  ")))),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",{class:"header"},(0,l.kt)("th",null,"Element"),(0,l.kt)("th",null,"Example"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"Option"),(0,l.kt)("td",null,"0 or 1"),(0,l.kt)("td",null,"0: \uc124\uc815\ub41c \uc8fc\uae30\ub9c8\ub2e4 \ubcf4\ub0bc \ub370\uc774\ud130\ub97c \uc124\uc815\ud55c\ub2e4.",(0,l.kt)("br",null),"1: AT\uba85\ub839 \uc989\uc2dc \ub370\uc774\ud130\ub97c \ubcf4\ub0b8\ub2e4.")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"Data"),(0,l.kt)("td",null,"DATA"),(0,l.kt)("td",null,"\ub370\uc774\ud130")))),"Examples)",(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+GMMPDATA=0,test data ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+GMMPDATA=1,test data  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atgmmpopt"},"AT+GMMPOPT"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+GMMPOPT=","<","Option",">",",","<","values"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," GMMP \uc635\uc158\uc744 \uc124\uc815\ud558\ub294 \uba85\ub839\uc5b4\uc774\ub2e4. AT+GMMPOPT\uc758 \uc635\uc158\uc5d0\ub294 3\uac00\uc9c0\uac00 \uc788\ub2e4.")))),(0,l.kt)("h4",{id:"option--10"},"<","Option",">"," = 10"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"<","Option",">"," = 10\uc740 \uc774\ubca4\ud2b8 \ub85c\uadf8, \ub514\ubc84\uadf8 \ud504\ub9b0\ud2b8\ub97c \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4.  ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Examples) AT+GMMPOPT=10,","<","set",">",",","<","val1",">",",","<","val2"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",{class:"header"},(0,l.kt)("th",null,"Element"),(0,l.kt)("th",null,"Example"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"set"),(0,l.kt)("td",null,"0 or 1"),(0,l.kt)("td",null,"0: \ud604\uc7ac \uc124\uc815\ub41c \uac12\uc744 \uc77d\ub294\ub2e4.",(0,l.kt)("br",null),"1: val1, val2\uc758 \uac12\uc73c\ub85c \uc124\uc815\ud55c\ub2e4.")),(0,l.kt)("tr",{class:"even"},(0,l.kt)("td",null,"val1"),(0,l.kt)("td",null,"0 or 1"),(0,l.kt)("td",null,"0: \uc774\ubca4\ud2b8 \ub85c\uadf8\ub97c \ud504\ub9b0\ud2b8 \ud558\uc9c0 \uc54a\ub294\ub2e4.",(0,l.kt)("br",null),"1: \uc774\ubca4\ud2b8 \ub85c\uadf8\ub97c \ud504\ub9b0\ud2b8 \ud55c\ub2e4.")),(0,l.kt)("tr",{class:"odd"},(0,l.kt)("td",null,"val2"),(0,l.kt)("td",null,"0 or 1"),(0,l.kt)("td",null,"0: \ub514\ubc84\uadf8 \uba54\uc138\uc9c0\ub97c \ud504\ub9b0\ud2b8\ud558\uc9c0 \uc54a\ub294\ub2e4.",(0,l.kt)("br",null),"1: \ub514\ubc84\uadf8 \uba54\uc138\uc9c0\ub97c \ud504\ub9b0\ud2b8 \ud55c\ub2e4.")))),"===<Option> = 11==="),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"<","Option",">"," = 11\uc740 Heartbeat \ud328\ud0b7\uc758 \uc804\uc1a1 \uc8fc\uae30(Heartbeat Period)\uc774\ub2e4.   "))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Element"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"Heartbeat \ud328\ud0b7 \uc804\uc1a1 \uc8fc\uae30(\ub2e8\uc704: \ubd84)")))),(0,l.kt)("p",null,"===","<","Option",">"," = 12==="),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"<","Option",">"," = 12\uc740 Delivery \ud328\ud0b7\uc758 \uc804\uc1a1 \uc8fc\uae30(Report Period)\uc774\ub2e4.  ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Examples) AT+GMMPOPT=12,","<","period"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Element"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"Delivery \ud328\ud0b7 \uc804\uc1a1 \uc8fc\uae30(\ub2e8\uc704: \ubd84)")))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"connecting-thingplug-commands"},"Connecting ThingPlug Commands"),(0,l.kt)("p",null,"ThingPlug\ub294 SK Telecom\uc758 IoT \ud50c\ub7ab\ud3fc\uc73c\ub85c, oneM2M \ud45c\uc900 \uae30\ubc18\uc758 IoT \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.  "),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"thingplug_example"},"Connecting ThingPlug Example"),"  "),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsktpcon"},"AT+SKTPCON"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+SKTPCON=<Con/Discon>,<ThingPlug IP>,<ThingPlug Port>,<Alive Time>,\n<ThingPlug Portal ID>,<Credential ID>,<Service ID>,<Version>,<Device ID> \n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," This command is used to connect to ThingPlug. "),(0,l.kt)("p",{parentName:"li"}," ","<","Con/Discon",">",": ThingPlug\nConnect/Disconnect"))))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Disconnect to the ThingPlug")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Connect from the ThingPlug")))),(0,l.kt)("p",null,"<","ThingPlug IP",">",": ThingPlug IP \uc8fc\uc18c  "),(0,l.kt)("p",null,"<","ThingPlug Port",">",": ThingPlug Port \ubc88\ud638  "),(0,l.kt)("p",null,"<","Alive Time",">",": ThingPlug\uc5d0 \uc811\uc18d \uc720\uc9c0\ud558\ub294 \uc2dc\uac04 \uc124\uc815  "),(0,l.kt)("p",null,"<","ThingPlug Portal ID",">",": ThingPlug\uc5d0 \uac00\uc785\ud55c \uc0ac\uc6a9\uc790 ID  "),(0,l.kt)("p",null,"<","Credential ID",">",": \ucd08\uae30 \ub514\ubc14\uc774\uc2a4 \uc778\uc99d \ucf54\ub4dc  "),(0,l.kt)("p",null,"<","Service ID",">",": \ub4f1\ub85d\ud55c \uc11c\ube44\uc2a4 ID  "),(0,l.kt)("p",null,"<","Version",">",": \ubc84\uc83c \uc815\ubcf4  "),(0,l.kt)("p",null,"<","Device ID",">",": \ub514\ubc14\uc774\uc2a4 ID  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SKTPCON=1,mqtt.thingplug.net,1883,300,ThingPlug User ID,ThingPlug Credential ID,ThingPlug Service ID,v1_0,Registered Device ID   "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[MQTT CONNECT][OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsktpdevice"},"AT+SKTPDEVICE"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+SKTPDEVICE=","<","Register/Delete",">",",","<","Device ID",">",",","<","Device Authorization Code(AE-ID)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Device register to ThingPlug. ")))),(0,l.kt)("p",null,"<","Register/Delete",">",": Device\nRegister/Delete to ThingPlug  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Device Delete")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Device Register")))),(0,l.kt)("p",null,"<","Device ID",">",": Device ID",(0,l.kt)("br",{parentName:"p"}),"\n","<","Device Authorization Code(AE-ID)",">",": AE-ID  "),(0,l.kt)("p",null,"Connection Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AT+SKTPDEVICE=1,Registered Device ID,Device Authorization Code(AE-ID) ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsktpcontainer"},"AT+SKTPCONTAINER"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"AT+SKTPCONTAINER=&#60;Register/Delete&#62;,&#60;Container Name\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Meaning:")," Register the Container Name. "),(0,l.kt)("p",{parentName:"li"}," ","<","Register/Delete",">",": Container\nRegister/Delete to ThingPlug  "))))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Container Delete")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Container Register")))),(0,l.kt)("p",null,"<","Container Name",">",": Container Name  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SKTPCONTAINER=1,WIZnet  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsktpsend"},"AT+SKTPSEND"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+SKTPSEND=","<","Container Name",">",",","<","Data"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Sending the data to ThingPlug")))),(0,l.kt)("p",null,"<","Container Name",">",": Container Name",(0,l.kt)("br",{parentName:"p"}),"\n","<","Data",">",": Data to send  "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Data Format is TTV(Between Device Platform and ThingPlug Service\nPlatform communication rule).",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SKTPSEND=WIZnet,010600000028  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsktpcmd"},"AT+SKTPCMD"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+SKTPCMD=","<","Register/Delete",">",",","<","Management command"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Register the response command to management.")))),(0,l.kt)("p",null,"<","Register/Delete",">",": Container Register/Delete to ThingPlug",(0,l.kt)("br",{parentName:"p"}),"\n","^ Parameter ^ Meaning ^"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Management command Delete")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Management command Register")))),(0,l.kt)("p",null,"<","Management command",">",": Response command to management  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"atsktpresult"},"AT+SKTPRESULT"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Format:")," "),(0,l.kt)("p",{parentName:"li"},"  AT+SKTPRESULT=","<","Management command",">",",","<","Execute Status",">",",","<","Execute Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Meaning:")," Publish the message to subscribed Client")))),(0,l.kt)("p",null,"<","Management command",">",": Registered Management command",(0,l.kt)("br",{parentName:"p"}),"\n","<","Execute Status",">",": Execute status value",(0,l.kt)("br",{parentName:"p"}),"\n","<","Execute Result",">",": Execute result value  "),(0,l.kt)("p",null,"Examples)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"AT+SKTPRESULT=WIZnet_CMD,3,0  "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Response:")),(0,l.kt)("p",{parentName:"li"},"[OK]"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"command-mode--data-mode"},"Command mode & Data mode"),(0,l.kt)("p",null,"There are two user interface modes between WizFi310 and User-System.  "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Command mode")," is the default communication mode and all AT Commands\ncan be used only at this mode. Through AT Commands, users can do 'WiFi\nConfiguration', 'Sending/Receiving Data', 'Managing System', and so on.\nWizFi310 treats all received data from users as AT command. If all\nreceived data follows the correct command format, WizFi310 processes it\nand returns a proper response to user.  "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Data mode"),", on the other hand, is the mode which passes data of\napplication layers to peer devices directly, without AT commands or any\nother interventions. It can be considered as a black box which passes\nall USART input to USART output directly. Its concept is simple but to\nenter this mode, Users need to set the environment properly through AT\nCommands."),(0,l.kt)("h3",{id:"entering-data-mode"},"Entering Data mode"),(0,l.kt)("p",null,"Users can enter Data mode by writing '1' at '","<","DataMode",">","' parameter of\nAT+SCON command. Make sure that there are no open sockets before\nperforming this, because Data mode works with one socket only. (So if\nyou try to open another socket in data mode it will fail). If the socket\nof Data mode is closed, the mode will be changed to Command mode\nautomatically so users can input AT Commands. If users set AT+SCON\ncommand as service with data mode option and save the profile, Data mode\nwill be started when WiFi is joined, so the user does not need to set\nenvironments anymore. If the system boots or reboots at that time, WiFi\nJoin will also be started automatically. Users can exit from data mode\ntemporally by entering '+++' in a row (Wait for a second until ","[OK]","\nresponse show up). Any AT Command can be entered during Data mode except\nAT+SCON command. If you want to return to data mode again, you just need\nto enter AT+SDATA. If you want to exit Data mode completely, close the\nsocket by using 'AT+SMGMT=0' or 'AT+SMGMT=ALL'."),(0,l.kt)("h3",{id:"data-transmission-in-command-mode"},"Data transmission in Command mode"),(0,l.kt)("p",null,"In Command mode, you can make more than one socket, and you can\nsend/receive data through opened sockets at the same time by using AT\nCommand. You can send data to specific socket opened through AT+SSEND\ncommand and receive data with information header which informs you on\nthe socket number, the peer address and the received data length."))}u.isMDXComponent=!0}}]);