"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[6705],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=i,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},19876:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const a={id:"systick",title:"System tick timer",date:new Date("2020-04-03T00:00:00.000Z")},o=void 0,l={unversionedId:"Product/iMCU/W7500/Peripherals-internal/systick",id:"Product/iMCU/W7500/Peripherals-internal/systick",title:"System tick timer",description:"Introduction",source:"@site/docs/Product/iMCU/W7500/Peripherals-internal/systick.md",sourceDirName:"Product/iMCU/W7500/Peripherals-internal",slug:"/Product/iMCU/W7500/Peripherals-internal/systick",permalink:"/Product/iMCU/W7500/Peripherals-internal/systick",draft:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/systick.md",tags:[],version:"current",frontMatter:{id:"systick",title:"System tick timer",date:"2020-04-03T00:00:00.000Z"},sidebar:"docs",previous:{title:"Random number generator (RNG)",permalink:"/Product/iMCU/W7500/Peripherals-internal/ssp"},next:{title:"W7500 TCP Function",permalink:"/Product/iMCU/W7500/Peripherals-internal/tcp-function"}},c={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:2},{value:"Functional description",id:"functional-description",level:2},{value:"Peripheral_Examples",id:"peripheral_examples",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"system tick timer(SysTick) is part of the ARM Cortex-M0 core"),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("p",null,"Simple 24bit timer.\nClocked internally by the system clock"),(0,i.kt)("h2",{id:"functional-description"},"Functional description"),(0,i.kt)("p",null,"The SysTick timer is an integral part of Cortex-M0. The SysTick timer is intended to generated a fixed 10 millisecond interrupt for use by an operating system or other system management software.\nSince the SysTick timer is a part of the Cortex-M0, it facilitates porting of software by\nproviding a standard timer that is available on Cortex-M0 based devices. The SysTick\ntimer can be used for : "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An RTOS tick timer which fires at a programmable rate (for example 100 Hz) and invokes a SysTick routine."),(0,i.kt)("li",{parentName:"ul"},"A high-speed alarm timer using the core clock."),(0,i.kt)("li",{parentName:"ul"},"A simple counter. Software can use this to measure time to completion and time used."),(0,i.kt)("li",{parentName:"ul"},"An internal clock source control based on missing/meeting durations. The COUNTFLAG bit-field in the control and status register can be used to determine if an action completed within a set duration, as part of a dynamic clock management control loop.")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"peripheral_examples"},"Peripheral_Examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/Product/iMCU/W7500/Peripherals-internal/delay"},"Delay example"))))}d.isMDXComponent=!0}}]);