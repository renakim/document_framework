"use strict";(self.webpackChunkwi_znet_documentation=self.webpackChunkwi_znet_documentation||[]).push([[34892],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||i;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},51623:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var n=r(83117),a=r(80102),i=(r(67294),r(3905)),l=["components"],o={id:"exti",title:"External Interrupt (EXTI)",date:new Date("2020-06-10T00:00:00.000Z")},u=void 0,c={unversionedId:"Product/iMCU/W7500/Peripherals-internal/exti",id:"Product/iMCU/W7500/Peripherals-internal/exti",isDocsHomePage:!1,title:"External Interrupt (EXTI)",description:"Introduction",source:"@site/docs/Product/iMCU/W7500/Peripherals-internal/exti.md",sourceDirName:"Product/iMCU/W7500/Peripherals-internal",slug:"/Product/iMCU/W7500/Peripherals-internal/exti",permalink:"/document_framework/Product/iMCU/W7500/Peripherals-internal/exti",editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/exti.md",tags:[],version:"current",frontMatter:{id:"exti",title:"External Interrupt (EXTI)",date:"2020-06-10T00:00:00.000Z"},sidebar:"docs",previous:{title:"I2C and M24CXX EEPROM communication example",permalink:"/document_framework/Product/iMCU/W7500/Peripherals-internal/eeprom"},next:{title:"Embedded Flash memory",permalink:"/document_framework/Product/iMCU/W7500/Peripherals-internal/flash"}},p=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Features",id:"features",children:[],level:2},{value:"Functional description",id:"functional-description",children:[],level:2},{value:"Peripheral_Examples",id:"peripheral_examples",children:[],level:2}],s={toc:p};function d(e){var t=e.components,o=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Each functional pads are connected to the external interrupt(EXTINT) source."),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"All functional pads can be used as an external interrupt source regardless of any set of pad function.  "),(0,i.kt)("li",{parentName:"ul"},"External Interrupt controller has the following functions and can be controlled by registers."),(0,i.kt)("li",{parentName:"ul"},"Interrupt mask (enable or disable, default : disable)"),(0,i.kt)("li",{parentName:"ul"},"Interrupt polarity (rising or falling, default : rising)")),(0,i.kt)("h2",{id:"functional-description"},"Functional description"),(0,i.kt)("p",null,"All pads are connected to the control register individually. (External interrupt mask register and External Interrupt polarity register)",(0,i.kt)("br",{parentName:"p"}),"\n","External interrupt working as following expression:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Each pad interrupt = Interrupt mask & (Interrupt polarity ^ Pad input)"),(0,i.kt)("li",{parentName:"ul"},"EXTINT = any Each pad interrupt")),(0,i.kt)("p",null,(0,i.kt)("img",{src:r(9603).Z,title:"Figure1 External Interrupt diagram"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"peripheral_examples"},"Peripheral_Examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/document_framework/Product/iMCU/W7500/Peripherals-internal/led_toggle"},"EXTI LED_Toggle example")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/document_framework/Product/iMCU/W7500/Peripherals-internal/sleep"},"EXTI Sleep example"))))}d.isMDXComponent=!0},9603:function(e,t,r){t.Z=r.p+"assets/images/external_interrupt_diagram-a01994956a013446fc4ee1bea6e9359b.jpg"}}]);